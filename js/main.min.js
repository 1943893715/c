(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"./src/js/main.js":[function(require,module,exports){
'use strict';

var upgrades = require('./upgrades');
var gameState = require('./gamestate');
var gameTimer = require('./gametimer');
var gainCalculator = require('./gaincalculator');
var functionBuilder = require('./functionbuilder');
var animatedFlyTip = require('./animatedflytip');
var favico = require('./favico');

angular.module('c', ['ui.bootstrap', 'hljs', 'LocalStorageModule', 'ngTable']).constant('Upgrades', upgrades).constant('Version', '0.0.1').service('favico', favico).service('AnimatedFlyTip', animatedFlyTip).service('GameState', gameState).service('GameTimer', gameTimer).service('GainCalculator', gainCalculator).service('FunctionBuilder', functionBuilder).controller('Game', ['$scope', '$window', '$interval', '$filter', 'GameState', 'GameTimer', 'FunctionBuilder', 'Upgrades', 'favico', 'ngTableParams', function ($scope, $window, $interval, $filter, GameState, GameTimer, FunctionBuilder, UPGRADES, favico, NgTableParams) {

  $scope._visibleUpgrades = [];

  $scope.tableParams = new NgTableParams({
    page: 1,
    count: 1000
  }, {
    groupBy: 'category',
    total: $scope._visibleUpgrades.length,
    getData: function getData($defer, params) {

      var data = $scope._visibleUpgrades;

      var orderedData = params.sorting() ? $filter('orderBy')(data, params.orderBy()) : data;

      var filteredData = params.filter() ? $filter('filter')(orderedData, params.filter()) : orderedData;

      params.total($scope._visibleUpgrades.length);

      $defer.resolve(filteredData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
    }
  });

  $scope.hasUpgrade = function (key) {
    var level = arguments[1] === undefined ? 0 : arguments[1];

    return GameState.upgrade.has(key, level);
  };

  $scope.hasUnits = function (amt) {
    return GameState.unit.has(amt);
  };

  $scope.visibleUpgrades = function () {

    var current = $scope._units;
    var allRet = [];

    _.each(UPGRADES, function (item, itemName) {

      var ret = [];

      var meetsAllReqs = true;

      _.each(item.requirements, function (req, key) {
        if (!$scope.hasUpgrade(key, req)) {
          meetsAllReqs = false;
        }
      });

      if (!meetsAllReqs) {
        return;
      }

      _.each(item.costs, function (cost, i) {
        var visLevel = GameState.upgrade.getKey('Upgrade Visibility');
        var visibilityBoost = 1 + (_.isUndefined(visLevel) ? 0 : 0.15 * visLevel);

        var prevItem = ret[ret.length - 1];
        var totalCost = cost + (prevItem ? prevItem.cost : 0);

        if ($scope.hasUpgrade(itemName, i) || totalCost / visibilityBoost > current) {
          return;
        }

        ret.push({
          name: itemName,
          level: i,
          cost: totalCost,
          buyLevels: 1 + (prevItem ? prevItem.buyLevels : 0),
          category: item.category
        });
      });

      allRet.push.apply(allRet, ret);
    });

    if ($scope.hasUpgrade('Alphabetized Upgrades')) {
      allRet = _.sortByOrder(allRet, ['name', 'level'], [true, true]);
    }

    if ($scope.hasUpgrade('Best Favicon')) {
      var buyableUpgrades = _.filter(allRet, function (item) {
        return item.cost < $scope._units;
      }).length;
      if (buyableUpgrades > 0) {
        favico.badge(buyableUpgrades);
      } else {
        favico.reset();
      }
    }

    return allRet;
  };

  $scope.buyUpgrade = function (upgName) {
    var levels = arguments[1] === undefined ? 1 : arguments[1];

    do {
      GameState.upgrade.inc(upgName);
    } while (--levels > 0);
  };

  $scope.gainUnits = function () {
    $window.increaseUnits();
  };

  $scope.save = function () {
    GameState.save();
  };

  $scope.refresh = function () {
    $scope._units = GameState.unit.get();
    $scope._visibleUpgrades = $scope.visibleUpgrades();
    $scope._function = FunctionBuilder.build();

    $scope.tableParams.reload();
  };

  $scope.refresh();
  $scope._timer = 0;
  $scope._timermax = 0;
  var timerInterval;

  GameState.unit.watch().then(null, null, $scope.refresh);
  GameState.upgrade.watch().then(null, null, $scope.refresh);

  GameTimer.watch().then(null, null, function (newTimerValue) {
    $scope._timer = $scope._timerMax = newTimerValue;
    if (timerInterval) {
      $interval.cancel(timerInterval);
    }
    timerInterval = $interval(function () {
      $scope._timer -= 100;
    }, 100);
  });

  $window.dumpState = function () {
    return GameState.upgrade.get();
  };

  $window.dumpDebugInfo = function () {
    return JSON.stringify(GameState.buildSaveObject(), null, 4);
  };
}]);

},{"./animatedflytip":"/home/seiyria/projects/c/src/js/animatedflytip.js","./favico":"/home/seiyria/projects/c/src/js/favico.js","./functionbuilder":"/home/seiyria/projects/c/src/js/functionbuilder.js","./gaincalculator":"/home/seiyria/projects/c/src/js/gaincalculator.js","./gamestate":"/home/seiyria/projects/c/src/js/gamestate.js","./gametimer":"/home/seiyria/projects/c/src/js/gametimer.js","./upgrades":"/home/seiyria/projects/c/src/js/upgrades.js"}],"/home/seiyria/projects/c/src/js/animatedflytip.js":[function(require,module,exports){
'use strict';

var animatedFlyTip = function animatedFlyTip($filter) {
  return {
    fly: function fly(num) {
      var useSeparator = arguments[1] === undefined ? false : arguments[1];

      var $element = $('<div />');

      var numString = num;
      if (useSeparator) {
        numString = $filter('number')(numString, 0);
      }

      if (num < 0) {
        $element.addClass('text-danger');
        $element.html(numString);
      } else if (num > 0) {
        $element.addClass('text-success');
        $element.html('+' + numString);
      }

      $element.css('position', 'absolute');
      $('body').append($element);

      var $base = $('#navbar-unit');
      $element.offset({ left: $base.offset().left, top: $base.offset().top });

      $element.animate({ top: '60px' });
      $element.animate({ opacity: 0, top: '60px' }, 500, 'swing', function () {
        $(this).remove();
      });
    }
  };
};

animatedFlyTip.$inject = ['$filter'];

module.exports = animatedFlyTip;

},{}],"/home/seiyria/projects/c/src/js/favico.js":[function(require,module,exports){
'use strict';

var favico = function favico() {
  var favico = new Favico({
    animation: 'fade'
  });

  var currentNum = 0;

  var badge = function badge(num) {
    if (num === currentNum) {
      return;
    }
    currentNum = num;
    favico.badge(num);
  };
  var reset = function reset() {
    favico.reset();
  };

  return {
    badge: badge,
    reset: reset
  };
};

module.exports = favico;

},{}],"/home/seiyria/projects/c/src/js/functionbuilder.js":[function(require,module,exports){
'use strict';

var functionBuilder = function functionBuilder(GameState, GainCalculator, $window) {
  return {
    build: function build() {

      var unitText = 'units';

      var functionHeader = ['', ''];
      if (GameState.upgrade.has('Function')) {
        functionHeader = ['function increaseUnits() {', '}'];
      }

      var iterationHeader = ['', ''];
      if (GameState.upgrade.has('Basic Iteration')) {
        iterationHeader = ['for(var i = 0; i < ' + GainCalculator.iteration() + '; i++) {', '}'];
      }

      var timeout = '';
      if (GameState.upgrade.has('Basic Timer')) {
        timeout = '$interval(increaseUnits, ' + GainCalculator.timer() + ');\n';
      }

      var animationHeader = ['', ''];
      if (GameState.upgrade.has('Basic Animation')) {
        animationHeader = ['var totalUnitsGained = 0;', 'units += totalUnitsGained;\n          animateUnitChange(totalUnitsGained);'];
        unitText = 'totalUnitsGained';
      }

      var saveHeader = ['', ''];
      if (GameState.upgrade.has('Save', 1)) {
        saveHeader = ['\nvar currentTick = 0;', '\n  if(currentTick++ % 10 === 0) {\n    currentTick = 0;\n    save();\n  }'];
      }

      if (GameState.upgrade.has('Save', 3)) {
        saveHeader = ['', '\n  save();'];
      }

      // dump it on the page. it's an "exploit"
      $window.increaseUnits = function () {
        GameState.unit.inc(GainCalculator.all());
      };

      return '' + timeout + '' + saveHeader[0] + '\n' + functionHeader[0] + '\n  ' + animationHeader[0] + '\n  ' + iterationHeader[0] + '\n    ' + unitText + ' += ' + GainCalculator.boost() + ';\n  ' + iterationHeader[1] + '\n  ' + saveHeader[1] + '\n  ' + animationHeader[1] + '\n' + functionHeader[1] + '\n';
    }
  };
};

functionBuilder.$inject = ['GameState', 'GainCalculator', '$window'];

module.exports = functionBuilder;

},{}],"/home/seiyria/projects/c/src/js/gaincalculator.js":[function(require,module,exports){
'use strict';

var gainCalculator = function gainCalculator(GameState) {

  var boost = function boost() {
    return Math.pow((GameState.upgrade.getKey('Basic Boost') || 0) + 1, 2);
  };

  var iteration = function iteration() {
    var iterLevel = GameState.upgrade.getKey('Basic Iteration');
    if (!iterLevel) {
      return 1;
    }
    return Math.pow(4, iterLevel + 1);
  };

  var timer = function timer() {
    var basicReduction = 0.05 * GameState.upgrade.getKey('Basic Timer');
    var advancedReduction = 0.15 * GameState.upgrade.getKey('Advanced Timer');
    advancedReduction = _.isNaN(advancedReduction) ? 0 : advancedReduction;
    return 30000 - 30000 * (basicReduction + advancedReduction);
  };

  return {
    boost: boost,
    iteration: iteration,
    timer: timer,
    all: function all() {
      return boost() * iteration();
    }
  };
};

gainCalculator.$inject = ['GameState'];

module.exports = gainCalculator;

},{}],"/home/seiyria/projects/c/src/js/gamestate.js":[function(require,module,exports){
'use strict';

var gameState = function gameState($q, UPGRADES, localStorage, AnimatedFlyTip) {
  var upgrades = {};
  var units = 0;
  var start = Date.now();

  var upgradeDefer = $q.defer();
  var unitDefer = $q.defer();

  var buildSaveObject = function buildSaveObject() {
    return {
      units: units,
      upgrades: upgrades,
      start: start
    };
  };

  var save = function save() {
    localStorage.set('game', buildSaveObject());
  };

  var load = function load() {
    var state = localStorage.get('game');

    if (!state) {
      return;
    }

    if (state.units) {
      units = state.units;
    }

    if (state.upgrades) {
      upgrades = state.upgrades;
    }

    if (state.start) {
      start = state.start;
    }
  };

  var upgrade = {
    has: function has(key) {
      var level = arguments[1] === undefined ? 0 : arguments[1];
      return upgrades[key] > level;
    },
    get: function get() {
      return upgrades;
    },
    getKey: function getKey(key) {
      return upgrades[key];
    },
    inc: function inc(key) {

      var nextLevel = upgrades[key] || 0;
      var cost = UPGRADES[key].costs[nextLevel];
      if (units < cost) {
        return;
      }

      if (!upgrades[key]) {
        upgrades[key] = 0;
      }
      upgrades[key]++;
      unit.inc(-cost);
      upgradeDefer.notify({ key: key, level: upgrades[key], all: upgrades });
    },
    watch: function watch() {
      return upgradeDefer.promise;
    }
  };

  var tick = 0;

  var unit = {
    has: function has(amt) {
      return units > amt;
    },
    inc: function inc(amt) {
      units += amt;
      unitDefer.notify(units);

      if (upgrade.has('Basic Animation')) {
        AnimatedFlyTip.fly(amt, upgrade.has('Number Formatting'));
      }

      if (upgrade.has('Save', 1) && !upgrade.has('Save', 3)) {
        if (tick++ % 10 === 0) {
          tick = 0;
          save();
        }
      }

      if (upgrade.has('Save', 3)) {
        save();
      }
    },
    get: function get() {
      return units;
    },
    watch: function watch() {
      return unitDefer.promise;
    }
  };

  load();

  return {
    upgrade: upgrade,
    unit: unit,
    save: save,
    buildSaveObject: buildSaveObject
  };
};

gameState.$inject = ['$q', 'Upgrades', 'localStorageService', 'AnimatedFlyTip'];

module.exports = gameState;

},{}],"/home/seiyria/projects/c/src/js/gametimer.js":[function(require,module,exports){
'use strict';

var gameTimer = function gameTimer($q, $interval, $timeout, $window, GameState, GainCalculator) {

  var interval = null;
  var timerDefer = $q.defer();

  var startTimer = function startTimer() {
    var upgradeData = arguments[0] === undefined ? { key: 'Timer' } : arguments[0];

    if (!GameState.upgrade.has('Basic Timer')) {
      return;
    }
    if (!_.contains(upgradeData.key, 'Timer')) {
      return;
    }

    if (interval) {
      $interval.cancel(interval);
    }

    interval = $interval(function () {
      $window.increaseUnits();
      timerDefer.notify(GainCalculator.timer());
    }, GainCalculator.timer());

    timerDefer.notify(GainCalculator.timer());
  };

  if (GameState.upgrade.has('Basic Timer')) {
    $timeout(startTimer, 0);
  }

  GameState.upgrade.watch().then(null, null, startTimer);

  return {
    watch: function watch() {
      return timerDefer.promise;
    }
  };
};

gameTimer.$inject = ['$q', '$interval', '$timeout', '$window', 'GameState', 'GainCalculator'];

module.exports = gameTimer;

},{}],"/home/seiyria/projects/c/src/js/upgrades.js":[function(require,module,exports){
'use strict';

module.exports = {
  Scoreboard: {
    category: 'Visual',
    costs: [10]
  },
  'Basic Layout': {
    category: 'Visual',
    costs: [15, 200]
  },
  'Better Layout': {
    category: 'Visual',
    requirements: { 'Basic Layout': 1 },
    costs: [200, 2000]
  },
  Function: {
    category: 'Tech',
    costs: [20]
  },
  'Basic Iteration': {
    category: 'Tech',
    requirements: { Function: 0 },
    costs: [50, 300, 20000, 150000]
  },
  'Basic Timer': {
    category: 'Tech',
    requirements: { Function: 0 },
    costs: [50, 600, 20000, 100000]
  },
  'Basic Boost': {
    category: 'Tech',
    requirements: { Function: 0 },
    costs: [10, 100, 25000, 200000]
  },
  Capitalization: {
    category: 'Visual',
    costs: [100]
  },
  Preformatting: {
    category: 'Visual',
    requirements: { 'Basic Iteration': 0 },
    costs: [150]
  },
  'Visual Countdown': {
    category: 'Visual',
    requirements: { 'Basic Timer': 0 },
    costs: [1000]
  },
  'Page Title': {
    category: 'Cosmetic',
    costs: [500]
  },
  'Better Page Title': {
    category: 'Cosmetic',
    requirements: { 'Page Title': 0, Scoreboard: 0 },
    costs: [2500]
  },
  'Alphabetized Upgrades': {
    category: 'Cosmetic',
    requirements: { Capitalization: 0, 'Better Layout': 0 },
    costs: [5000]
  },
  'Upgrade Visibility': {
    category: 'Cosmetic',
    requirements: { 'Alphabetized Upgrades': 0 },
    costs: [6500, 8500, 10500]
  },
  'Progress Bar': {
    category: 'Visual',
    requirements: { 'Better Layout': 1, 'Basic Color': 0 },
    costs: [5000]
  },
  'Basic Style': {
    category: 'Visual',
    requirements: { 'Better Layout': 1 },
    costs: [10000, 20000]
  },
  'Basic Color': {
    category: 'Visual',
    requirements: { 'Basic Style': 0 },
    costs: [12500]
  },
  Iconography: {
    category: 'Visual',
    requirements: { 'Basic Style': 0 },
    costs: [25000]
  },
  'Number Formatting': {
    category: 'Cosmetic',
    requirements: { 'Basic Style': 0 },
    costs: [20000]
  },
  'Basic Animation': {
    category: 'Cosmetic',
    requirements: { 'Basic Style': 0, 'Basic Iteration': 0, 'Basic Color': 0 },
    costs: [100000]
  },
  Favicon: {
    category: 'Cosmetic',
    costs: [2000]
  },
  'Best Favicon': {
    category: 'Cosmetic',
    requirements: { 'Better Page Title': 0, Favicon: 0 },
    costs: [100000]
  },
  'Syntax Highlighting': {
    category: 'Cosmetic',
    requirements: { Preformatting: 0 },
    costs: [50000]
  },
  Save: {
    category: 'Tech',
    costs: [300, 5000, 20000, 150000]
  },
  'Advanced Timer': {
    category: 'Tech',
    requirements: { 'Basic Timer': 3 },
    costs: [200000, 750000, 1500000]
  },
  'Best Table': {
    category: 'Tech',
    requirements: { 'Basic Style': 1 },
    costs: [250000]
  }
};

},{}]},{},["./src/js/main.js"])
//# sourceMappingURL=data:application/json;base64,
