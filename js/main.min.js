(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"./src/js/main.js":[function(require,module,exports){
'use strict';

var upgrades = require('./upgrades');
var gameState = require('./gamestate');
var gameTimer = require('./gametimer');
var gainCalculator = require('./gaincalculator');
var functionBuilder = require('./functionbuilder');
var animatedFlyTip = require('./animatedflytip');
var favico = require('./favico');
var gameController = require('./gamecontroller');

angular.module('c', ['ui.bootstrap', 'hljs', 'LocalStorageModule', 'ngTable', 'angularMoment']).constant('Upgrades', upgrades).constant('Version', '0.0.1').service('favico', favico).service('AnimatedFlyTip', animatedFlyTip).service('GameState', gameState).service('GameTimer', gameTimer).service('GainCalculator', gainCalculator).service('FunctionBuilder', functionBuilder).controller('Game', gameController);

},{"./animatedflytip":"/home/seiyria/projects/c/src/js/animatedflytip.js","./favico":"/home/seiyria/projects/c/src/js/favico.js","./functionbuilder":"/home/seiyria/projects/c/src/js/functionbuilder.js","./gaincalculator":"/home/seiyria/projects/c/src/js/gaincalculator.js","./gamecontroller":"/home/seiyria/projects/c/src/js/gamecontroller.js","./gamestate":"/home/seiyria/projects/c/src/js/gamestate.js","./gametimer":"/home/seiyria/projects/c/src/js/gametimer.js","./upgrades":"/home/seiyria/projects/c/src/js/upgrades.js"}],"/home/seiyria/projects/c/src/js/animatedflytip.js":[function(require,module,exports){
'use strict';

var animatedFlyTip = function animatedFlyTip($filter) {
  return {
    fly: function fly(num) {
      var useSeparator = arguments[1] === undefined ? false : arguments[1];

      var $element = $('<div />');

      var numString = num;
      if (useSeparator) {
        numString = $filter('number')(numString, 0);
      }

      if (num < 0) {
        $element.addClass('text-danger');
        $element.html(numString);
      } else if (num > 0) {
        $element.addClass('text-success');
        $element.html('+' + numString);
      }

      $element.css('position', 'absolute');
      $('body').append($element);

      var $base = $('#navbar-unit');
      $element.offset({ left: $base.offset().left, top: $base.offset().top });

      $element.animate({ top: '60px' });
      $element.animate({ opacity: 0, top: '60px' }, 500, 'swing', function () {
        $(this).remove();
      });
    }
  };
};

animatedFlyTip.$inject = ['$filter'];

module.exports = animatedFlyTip;

},{}],"/home/seiyria/projects/c/src/js/favico.js":[function(require,module,exports){
'use strict';

var favico = function favico() {
  var favico = new Favico({
    animation: 'fade'
  });

  var currentNum = 0;

  var badge = function badge(num) {
    if (num === currentNum) {
      return;
    }
    currentNum = num;
    favico.badge(num);
  };
  var reset = function reset() {
    favico.reset();
  };

  return {
    badge: badge,
    reset: reset
  };
};

module.exports = favico;

},{}],"/home/seiyria/projects/c/src/js/functionbuilder.js":[function(require,module,exports){
'use strict';

var functionBuilder = function functionBuilder(GameState, GainCalculator, $window) {
  return {
    build: function build() {

      var unitText = 'units';

      var functionHeader = ['', ''];
      if (GameState.upgrade.has('Function')) {
        functionHeader = ['function increaseUnits() {', '}'];
      }

      var iterationHeader = ['', ''];
      if (GameState.upgrade.has('Basic Iteration')) {
        iterationHeader = ['for(var i = 0; i < ' + GainCalculator.iteration() + '; i++) {', '}'];
      }

      var timeout = '';
      if (GameState.upgrade.has('Basic Timer')) {
        timeout = '$interval(increaseUnits, ' + GainCalculator.timer() + ');\n';
      }

      var animationHeader = ['', ''];
      if (GameState.upgrade.has('Basic Animation')) {
        animationHeader = ['var totalUnitsGained = 0;', 'units += totalUnitsGained;\n    animateUnitChange(totalUnitsGained);'];
        unitText = 'totalUnitsGained';
      }

      var saveHeader = ['', ''];
      if (GameState.upgrade.has('Save', 1)) {
        saveHeader = ['\nvar currentTick = 0;', '\n  if(++currentTick % 10 === 0) {\n    currentTick = 0;\n    save();\n  }'];
      }

      if (GameState.upgrade.has('Save', 3)) {
        saveHeader = ['', '\n  save();'];
      }

      // dump it on the page. it's an "exploit"
      $window.increaseUnits = function () {
        GameState.unit.inc(GainCalculator.all());
      };

      return '' + timeout + '' + saveHeader[0] + '\n' + functionHeader[0] + '\n  ' + animationHeader[0] + '\n  ' + iterationHeader[0] + '\n    ' + unitText + ' += ' + GainCalculator.boost() + ';\n  ' + iterationHeader[1] + '\n  ' + saveHeader[1] + '\n  ' + animationHeader[1] + '\n' + functionHeader[1] + '\n';
    }
  };
};

functionBuilder.$inject = ['GameState', 'GainCalculator', '$window'];

module.exports = functionBuilder;

},{}],"/home/seiyria/projects/c/src/js/gaincalculator.js":[function(require,module,exports){
'use strict';

var gainCalculator = function gainCalculator(GameState) {

  var boost = function boost() {
    return Math.pow((GameState.upgrade.getKey('Basic Boost') || 0) + 1, 2);
  };

  var iteration = function iteration() {
    var iterLevel = GameState.upgrade.getKey('Basic Iteration');
    if (!iterLevel) {
      return 1;
    }
    return Math.pow(2, iterLevel + 1);
  };

  var timer = function timer() {
    var basicReduction = 0.05 * GameState.upgrade.getKey('Basic Timer');
    var advancedReduction = 0.15 * GameState.upgrade.getKey('Advanced Timer');
    advancedReduction = _.isNaN(advancedReduction) ? 0 : advancedReduction;
    return 30000 - 30000 * (basicReduction + advancedReduction);
  };

  return {
    boost: boost,
    iteration: iteration,
    timer: timer,
    all: function all() {
      return boost() * iteration();
    }
  };
};

gainCalculator.$inject = ['GameState'];

module.exports = gainCalculator;

},{}],"/home/seiyria/projects/c/src/js/gamecontroller.js":[function(require,module,exports){
'use strict';

var gameController = function gameController($scope, $window, $interval, $filter, $modal, GameState, GameTimer, FunctionBuilder, UPGRADES, favico, NgTableParams) {
  $scope._visibleUpgrades = [];

  $scope.tableParams = new NgTableParams({
    page: 1,
    count: 1000
  }, {
    groupBy: 'category',
    total: $scope._visibleUpgrades.length,
    getData: function getData($defer, params) {
      var data = $scope._visibleUpgrades;

      var orderedData = params.sorting() ? $filter('orderBy')(data, params.orderBy()) : data;

      var filteredData = params.filter() ? $filter('filter')(orderedData, params.filter()) : orderedData;

      params.total($scope._visibleUpgrades.length);

      $defer.resolve(filteredData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
    }
  });

  $scope.hasUpgrade = function (key) {
    var level = arguments[1] === undefined ? 0 : arguments[1];

    return GameState.upgrade.has(key, level);
  };

  $scope.hasUnits = function (amt) {
    return GameState.unit.has(amt);
  };

  $scope.visibleUpgrades = function () {

    var current = $scope._units;
    var allRet = [];

    _.each(UPGRADES, function (item, itemName) {

      var ret = [];

      var meetsAllReqs = true;

      _.each(item.requirements, function (req, key) {
        if (!$scope.hasUpgrade(key, req)) {
          meetsAllReqs = false;
        }
      });

      if (!meetsAllReqs) {
        return;
      }

      _.each(item.costs, function (cost, i) {
        var visLevel = GameState.upgrade.getKey('Upgrade Visibility');
        var visibilityBoost = 1 + (_.isUndefined(visLevel) ? 0 : 0.15 * visLevel);
        var prevItem = ret[ret.length - 1];
        var totalCost = cost + (prevItem ? prevItem.cost : 0);

        if ($scope.hasUpgrade(itemName, i) || totalCost / visibilityBoost > current) {
          return;
        }

        ret.push({
          name: itemName,
          level: i,
          cost: totalCost,
          buyLevels: 1 + (prevItem ? prevItem.buyLevels : 0),
          category: item.category
        });
      });

      allRet.push.apply(allRet, ret);
    });

    if ($scope.hasUpgrade('Alphabetized Upgrades')) {
      allRet = _.sortByOrder(allRet, ['name', 'level'], [true, true]);
    }

    if ($scope.hasUpgrade('Best Favicon')) {
      var buyableUpgrades = _.filter(allRet, function (item) {
        return item.cost < $scope._units;
      }).length;
      if (buyableUpgrades > 0) {
        favico.badge(buyableUpgrades);
      } else {
        favico.reset();
      }
    }

    return allRet;
  };

  $scope.buyUpgrade = function (upgName) {
    var levels = arguments[1] === undefined ? 1 : arguments[1];

    do {
      GameState.upgrade.inc(upgName);
    } while (--levels > 0);
  };

  $scope.gainUnits = function () {
    $window.increaseUnits();
  };

  $scope.save = function () {
    GameState.save();
  };

  $scope.refresh = function () {
    $scope._units = GameState.unit.get();
    $scope._visibleUpgrades = $scope.visibleUpgrades();
    $scope._function = FunctionBuilder.build();
    $scope.tableParams.reload();
  };

  $scope.openModal = function (modal) {
    $modal.open({
      templateUrl: 'modal-' + modal,
      scope: $scope
    });
  };

  $scope.refresh();
  $scope._timer = 0;
  $scope._timermax = 0;
  var timerInterval;

  GameState.unit.watch().then(null, null, $scope.refresh);
  GameState.upgrade.watch().then(null, null, $scope.refresh);

  GameTimer.watch().then(null, null, function (newTimerValue) {
    $scope._timer = $scope._timerMax = newTimerValue;
    if (timerInterval) {
      $interval.cancel(timerInterval);
    }
    timerInterval = $interval(function () {
      $scope._timer -= 100;
    }, 100);
  });

  $scope.saveObject = function () {
    return GameState.buildSaveObject();
  };

  $scope.debugInfo = $window.dumpDebugInfo = function () {
    return JSON.stringify($scope.saveObject(), null, 4);
  };
};

gameController.$inject = ['$scope', '$window', '$interval', '$filter', '$modal', 'GameState', 'GameTimer', 'FunctionBuilder', 'Upgrades', 'favico', 'ngTableParams'];

module.exports = gameController;

},{}],"/home/seiyria/projects/c/src/js/gamestate.js":[function(require,module,exports){
'use strict';

var gameState = function gameState($q, UPGRADES, localStorage, AnimatedFlyTip) {
  var upgrades = {};
  var units = 0;
  var start = Date.now();

  var upgradeDefer = $q.defer();
  var unitDefer = $q.defer();

  var buildSaveObject = function buildSaveObject() {
    return {
      units: units,
      upgrades: upgrades,
      start: start
    };
  };

  var save = function save() {
    localStorage.set('game', buildSaveObject());
  };

  var load = function load() {
    var state = localStorage.get('game');

    if (!state) {
      return;
    }

    if (state.units) {
      units = state.units;
    }

    if (state.upgrades) {
      upgrades = state.upgrades;
    }

    if (state.start) {
      start = state.start;
    }
  };

  var upgrade = {
    has: function has(key) {
      var level = arguments[1] === undefined ? 0 : arguments[1];
      return upgrades[key] > level;
    },
    get: function get() {
      return upgrades;
    },
    getKey: function getKey(key) {
      return upgrades[key];
    },
    inc: function inc(key) {

      var nextLevel = upgrades[key] || 0;
      var cost = UPGRADES[key].costs[nextLevel];
      if (units < cost) {
        return;
      }

      if (!upgrades[key]) {
        upgrades[key] = 0;
      }
      upgrades[key]++;
      unit.inc(-cost);
      upgradeDefer.notify({ key: key, level: upgrades[key], all: upgrades });
    },
    watch: function watch() {
      return upgradeDefer.promise;
    }
  };

  var tick = 0;

  var unit = {
    has: function has(amt) {
      return units > amt;
    },
    inc: function inc(amt) {
      units += amt;
      unitDefer.notify(units);

      if (upgrade.has('Basic Animation')) {
        AnimatedFlyTip.fly(amt, upgrade.has('Number Formatting'));
      }

      if (upgrade.has('Save', 1) && !upgrade.has('Save', 3)) {
        if (++tick % 10 === 0) {
          tick = 0;
          save();
        }
      }

      if (upgrade.has('Save', 3)) {
        save();
      }
    },
    get: function get() {
      return units;
    },
    watch: function watch() {
      return unitDefer.promise;
    }
  };

  load();

  return {
    upgrade: upgrade,
    unit: unit,
    save: save,
    buildSaveObject: buildSaveObject
  };
};

gameState.$inject = ['$q', 'Upgrades', 'localStorageService', 'AnimatedFlyTip'];

module.exports = gameState;

},{}],"/home/seiyria/projects/c/src/js/gametimer.js":[function(require,module,exports){
'use strict';

var gameTimer = function gameTimer($q, $interval, $timeout, $window, GameState, GainCalculator) {

  var interval = null;
  var timerDefer = $q.defer();

  var startTimer = function startTimer() {
    var upgradeData = arguments[0] === undefined ? { key: 'Timer' } : arguments[0];

    if (!GameState.upgrade.has('Basic Timer')) {
      return;
    }
    if (!_.contains(upgradeData.key, 'Timer')) {
      return;
    }

    if (interval) {
      $interval.cancel(interval);
    }

    interval = $interval(function () {
      $window.increaseUnits();
      timerDefer.notify(GainCalculator.timer());
    }, GainCalculator.timer());

    timerDefer.notify(GainCalculator.timer());
  };

  if (GameState.upgrade.has('Basic Timer')) {
    $timeout(startTimer, 0);
  }

  GameState.upgrade.watch().then(null, null, startTimer);

  return {
    watch: function watch() {
      return timerDefer.promise;
    }
  };
};

gameTimer.$inject = ['$q', '$interval', '$timeout', '$window', 'GameState', 'GainCalculator'];

module.exports = gameTimer;

},{}],"/home/seiyria/projects/c/src/js/upgrades.js":[function(require,module,exports){
'use strict';

module.exports = {
  Scoreboard: {
    category: 'Visual',
    costs: [10]
  },
  'Basic Layout': {
    category: 'Visual',
    costs: [15, 200]
  },
  'Better Layout': {
    category: 'Visual',
    requirements: { 'Basic Layout': 1 },
    costs: [200, 2000]
  },
  Function: {
    category: 'Tech',
    costs: [20]
  },
  'Basic Iteration': {
    category: 'Tech',
    requirements: { Function: 0 },
    costs: [50, 300, 20000, 150000]
  },
  'Basic Timer': {
    category: 'Tech',
    requirements: { Function: 0 },
    costs: [50, 600, 20000, 100000]
  },
  'Basic Boost': {
    category: 'Tech',
    requirements: { Function: 0 },
    costs: [10, 100, 25000, 200000]
  },
  Capitalization: {
    category: 'Visual',
    costs: [100]
  },
  Preformatting: {
    category: 'Visual',
    requirements: { 'Basic Iteration': 0 },
    costs: [150]
  },
  'Visual Countdown': {
    category: 'Visual',
    requirements: { 'Basic Timer': 0 },
    costs: [1000]
  },
  'Page Title': {
    category: 'Cosmetic',
    requirements: { 'Basic Layout': 0 },
    costs: [500]
  },
  'Better Page Title': {
    category: 'Cosmetic',
    requirements: { 'Page Title': 0, Scoreboard: 0 },
    costs: [2500]
  },
  'Alphabetized Upgrades': {
    category: 'Cosmetic',
    requirements: { Capitalization: 0, 'Better Layout': 0 },
    costs: [5000]
  },
  'Upgrade Visibility': {
    category: 'Cosmetic',
    requirements: { 'Alphabetized Upgrades': 0 },
    costs: [6500, 8500, 10500]
  },
  'Progress Bar': {
    category: 'Visual',
    requirements: { 'Better Layout': 1, 'Basic Color': 0, 'Visual Countdown': 0 },
    costs: [5000]
  },
  'Basic Style': {
    category: 'Visual',
    requirements: { 'Better Layout': 1 },
    costs: [10000, 20000]
  },
  'Basic Color': {
    category: 'Visual',
    requirements: { 'Basic Style': 0 },
    costs: [12500]
  },
  Iconography: {
    category: 'Visual',
    requirements: { 'Basic Style': 0 },
    costs: [25000]
  },
  'Number Formatting': {
    category: 'Cosmetic',
    requirements: { 'Basic Style': 0 },
    costs: [20000]
  },
  'Basic Animation': {
    category: 'Cosmetic',
    requirements: { 'Basic Style': 0, 'Basic Iteration': 0, 'Basic Color': 0 },
    costs: [100000]
  },
  Favicon: {
    category: 'Cosmetic',
    costs: [2000]
  },
  'Best Favicon': {
    category: 'Cosmetic',
    requirements: { 'Better Page Title': 0, Favicon: 0 },
    costs: [100000]
  },
  'Syntax Highlighting': {
    category: 'Cosmetic',
    requirements: { Preformatting: 0 },
    costs: [50000]
  },
  Save: {
    category: 'Tech',
    requirements: { 'Basic Layout': 0 },
    costs: [300, 5000, 20000, 150000]
  },
  'Advanced Timer': {
    category: 'Tech',
    requirements: { 'Basic Timer': 3 },
    costs: [200000, 750000, 1500000]
  },
  'Best Table': {
    category: 'Tech',
    requirements: { 'Basic Style': 1 },
    costs: [250000]
  },
  Menu: {
    category: 'Tech',
    requirements: { 'Basic Layout': 0 },
    costs: [2500]
  },
  'Help Menu': {
    category: 'Tech',
    requirements: { Menu: 0 },
    costs: [2]
  },
  Tooltips: {
    category: 'Tech',
    requirements: { 'Help Menu': 0 },
    costs: [17500]
  },
  'Options Menu': {
    category: 'Tech',
    requirements: { Menu: 0 },
    costs: [5000]
  }
};

},{}]},{},["./src/js/main.js"])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCIvaG9tZS9zZWl5cmlhL3Byb2plY3RzL2Mvc3JjL2pzL21haW4uanMiLCIvaG9tZS9zZWl5cmlhL3Byb2plY3RzL2Mvc3JjL2pzL2FuaW1hdGVkZmx5dGlwLmpzIiwiL2hvbWUvc2VpeXJpYS9wcm9qZWN0cy9jL3NyYy9qcy9mYXZpY28uanMiLCIvaG9tZS9zZWl5cmlhL3Byb2plY3RzL2Mvc3JjL2pzL2Z1bmN0aW9uYnVpbGRlci5qcyIsIi9ob21lL3NlaXlyaWEvcHJvamVjdHMvYy9zcmMvanMvZ2FpbmNhbGN1bGF0b3IuanMiLCIvaG9tZS9zZWl5cmlhL3Byb2plY3RzL2Mvc3JjL2pzL2dhbWVjb250cm9sbGVyLmpzIiwiL2hvbWUvc2VpeXJpYS9wcm9qZWN0cy9jL3NyYy9qcy9nYW1lc3RhdGUuanMiLCIvaG9tZS9zZWl5cmlhL3Byb2plY3RzL2Mvc3JjL2pzL2dhbWV0aW1lci5qcyIsIi9ob21lL3NlaXlyaWEvcHJvamVjdHMvYy9zcmMvanMvdXBncmFkZXMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0NBLElBQUksUUFBUSxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUNyQyxJQUFJLFNBQVMsR0FBRyxPQUFPLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDdkMsSUFBSSxTQUFTLEdBQUcsT0FBTyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ3ZDLElBQUksY0FBYyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0FBQ2pELElBQUksZUFBZSxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQ25ELElBQUksY0FBYyxHQUFHLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0FBQ2pELElBQUksTUFBTSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNqQyxJQUFJLGNBQWMsR0FB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QztBQUNqQyxTQUFLLEVBQUUsQ0FBQyxJQUFJLENBQUM7R0FDZDtBQUNELGFBQVcsRUFBRTtBQUNYLFlBQVEsRUFBRSxNQUFNO0FBQ2hCLGdCQUFZLEVBQUUsRUFBQyxNQUFRLENBQUMsRUFBQztBQUN6QixTQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7R0FDWDtBQUNELFVBQVEsRUFBRTtBQUNSLFlBQVEsRUFBRSxNQUFNO0FBQ2hCLGdCQUFZLEVBQUUsRUFBQyxXQUFXLEVBQUUsQ0FBQyxFQUFDO0FBQzlCLFNBQUssRUFBRSxDQUFDLEtBQUssQ0FBQztHQUNmO0FBQ0QsZ0JBQWMsRUFBRTtBQUNkLFlBQVEsRUFBRSxNQUFNO0FBQ2hCLGdCQUFZLEVBQUUsRUFBQyxNQUFRLENBQUMsRUFBQztBQUN6QixTQUFLLEVBQUUsQ0FBQyxJQUFJLENBQUM7R0FDZDtDQUNGLENBQUMiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiXG52YXIgdXBncmFkZXMgPSByZXF1aXJlKCcuL3VwZ3JhZGVzJyk7XG52YXIgZ2FtZVN0YXRlID0gcmVxdWlyZSgnLi9nYW1lc3RhdGUnKTtcbnZhciBnYW1lVGltZXIgPSByZXF1aXJlKCcuL2dhbWV0aW1lcicpO1xudmFyIGdhaW5DYWxjdWxhdG9yID0gcmVxdWlyZSgnLi9nYWluY2FsY3VsYXRvcicpO1xudmFyIGZ1bmN0aW9uQnVpbGRlciA9IHJlcXVpcmUoJy4vZnVuY3Rpb25idWlsZGVyJyk7XG52YXIgYW5pbWF0ZWRGbHlUaXAgPSByZXF1aXJlKCcuL2FuaW1hdGVkZmx5dGlwJyk7XG52YXIgZmF2aWNvID0gcmVxdWlyZSgnLi9mYXZpY28nKTtcbnZhciBnYW1lQ29udHJvbGxlciA9IHJlcXVpcmUoJy4vZ2FtZWNvbnRyb2xsZXInKTtcblxuYW5ndWxhci5tb2R1bGUoJ2MnLCBbJ3VpLmJvb3RzdHJhcCcsICdobGpzJywgJ0xvY2FsU3RvcmFnZU1vZHVsZScsICduZ1RhYmxlJywgJ2FuZ3VsYXJNb21lbnQnXSlcblxuICAuY29uc3RhbnQoJ1VwZ3JhZGVzJywgdXBncmFkZXMpXG5cbiAgLmNvbnN0YW50KCdWZXJzaW9uJywgJzAuMC4xJylcblxuICAuc2VydmljZSgnZmF2aWNvJywgZmF2aWNvKVxuXG4gIC5zZXJ2aWNlKCdBbmltYXRlZEZseVRpcCcsIGFuaW1hdGVkRmx5VGlwKVxuXG4gIC5zZXJ2aWNlKCdHYW1lU3RhdGUnLCBnYW1lU3RhdGUpXG5cbiAgLnNlcnZpY2UoJ0dhbWVUaW1lcicsIGdhbWVUaW1lcilcblxuICAuc2VydmljZSgnR2FpbkNhbGN1bGF0b3InLCBnYWluQ2FsY3VsYXRvcilcblxuICAuc2VydmljZSgnRnVuY3Rpb25CdWlsZGVyJywgZnVuY3Rpb25CdWlsZGVyKVxuXG4gIC5jb250cm9sbGVyKCdHYW1lJywgZ2FtZUNvbnRyb2xsZXIpOyIsInZhciBhbmltYXRlZEZseVRpcCA9IGZ1bmN0aW9uKCRmaWx0ZXIpIHtcbiAgcmV0dXJuIHtcbiAgICBmbHk6IGZ1bmN0aW9uKG51bSwgdXNlU2VwYXJhdG9yID0gZmFsc2UpIHtcbiAgICAgIHZhciAkZWxlbWVudCA9ICQoJzxkaXYgLz4nKTtcblxuICAgICAgdmFyIG51bVN0cmluZyA9IG51bTtcbiAgICAgIGlmKHVzZVNlcGFyYXRvcikge1xuICAgICAgICBudW1TdHJpbmcgPSAkZmlsdGVyKCdudW1iZXInKShudW1TdHJpbmcsIDApO1xuICAgICAgfVxuXG4gICAgICBpZihudW0gPCAwKSB7XG4gICAgICAgICRlbGVtZW50LmFkZENsYXNzKCd0ZXh0LWRhbmdlcicpO1xuICAgICAgICAkZWxlbWVudC5odG1sKG51bVN0cmluZyk7XG4gICAgICB9IGVsc2UgaWYobnVtID4gMCkge1xuICAgICAgICAkZWxlbWVudC5hZGRDbGFzcygndGV4dC1zdWNjZXNzJyk7XG4gICAgICAgICRlbGVtZW50Lmh0bWwoYCske251bVN0cmluZ31gKTtcbiAgICAgIH1cblxuICAgICAgJGVsZW1lbnQuY3NzKCdwb3NpdGlvbicsICdhYnNvbHV0ZScpO1xuICAgICAgJCgnYm9keScpLmFwcGVuZCgkZWxlbWVudCk7XG5cbiAgICAgIHZhciAkYmFzZSA9ICQoJyNuYXZiYXItdW5pdCcpO1xuICAgICAgJGVsZW1lbnQub2Zmc2V0KHtsZWZ0OiAkYmFzZS5vZmZzZXQoKS5sZWZ0LCB0b3A6ICRiYXNlLm9mZnNldCgpLnRvcH0pO1xuXG4gICAgICAkZWxlbWVudC5hbmltYXRlKHt0b3A6ICc2MHB4J30pO1xuICAgICAgJGVsZW1lbnQuYW5pbWF0ZSh7b3BhY2l0eTogMCwgdG9wOiAnNjBweCd9LCA1MDAsICdzd2luZycsIGZ1bmN0aW9uKCkge1xuICAgICAgICAkKHRoaXMpLnJlbW92ZSgpO1xuICAgICAgfSk7XG5cbiAgICB9XG4gIH07XG59O1xuXG5hbmltYXRlZEZseVRpcC4kaW5qZWN0ID0gWyckZmlsdGVyJ107XG5cbm1vZHVsZS5leHBvcnRzID0gYW5pbWF0ZWRGbHlUaXA7IiwiXG52YXIgZmF2aWNvID0gZnVuY3Rpb24oKSB7XG4gIHZhciBmYXZpY28gPSBuZXcgRmF2aWNvKHtcbiAgICBhbmltYXRpb24gOiAnZmFkZSdcbiAgfSk7XG5cbiAgdmFyIGN1cnJlbnROdW0gPSAwO1xuXG4gIHZhciBiYWRnZSA9IGZ1bmN0aW9uKG51bSkge1xuICAgIGlmKG51bSA9PT0gY3VycmVudE51bSkgeyByZXR1cm47IH1cbiAgICBjdXJyZW50TnVtID0gbnVtO1xuICAgIGZhdmljby5iYWRnZShudW0pO1xuICB9O1xuICB2YXIgcmVzZXQgPSBmdW5jdGlvbigpIHtcbiAgICBmYXZpY28ucmVzZXQoKTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGJhZGdlIDogYmFkZ2UsXG4gICAgcmVzZXQgOiByZXNldFxuICB9O1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmYXZpY287IiwidmFyIGZ1bmN0aW9uQnVpbGRlciA9IGZ1bmN0aW9uKEdhbWVTdGF0ZSwgR2FpbkNhbGN1bGF0b3IsICR3aW5kb3cpIHtcbiAgcmV0dXJuIHtcbiAgICBidWlsZDogZnVuY3Rpb24oKSB7XG5cbiAgICAgIHZhciB1bml0VGV4dCA9ICd1bml0cyc7XG5cbiAgICAgIHZhciBmdW5jdGlvbkhlYWRlciA9IFsnJywnJ107XG4gICAgICBpZihHYW1lU3RhdGUudXBncmFkZS5oYXMoJ0Z1bmN0aW9uJykpIHtcbiAgICAgICAgZnVuY3Rpb25IZWFkZXIgPSBbYGZ1bmN0aW9uIGluY3JlYXNlVW5pdHMoKSB7YCwgYH1gXTtcbiAgICAgIH1cblxuICAgICAgdmFyIGl0ZXJhdGlvbkhlYWRlciA9IFsnJywnJ107XG4gICAgICBpZihHYW1lU3RhdGUudXBncmFkZS5oYXMoJ0Jhc2ljIEl0ZXJhdGlvbicpKSB7XG4gICAgICAgIGl0ZXJhdGlvbkhlYWRlciA9IFtgZm9yKHZhciBpID0gMDsgaSA8ICR7R2FpbkNhbGN1bGF0b3IuaXRlcmF0aW9uKCl9OyBpKyspIHtgLCBgfWBdO1xuICAgICAgfVxuXG4gICAgICB2YXIgdGltZW91dCA9IGBgO1xuICAgICAgaWYoR2FtZVN0YXRlLnVwZ3JhZGUuaGFzKCdCYXNpYyBUaW1lcicpKSB7XG4gICAgICAgIHRpbWVvdXQgPSBgJGludGVydmFsKGluY3JlYXNlVW5pdHMsICR7R2FpbkNhbGN1bGF0b3IudGltZXIoKX0pO1xcbmA7XG4gICAgICB9XG5cbiAgICAgIHZhciBhbmltYXRpb25IZWFkZXIgPSBbJycsJyddO1xuICAgICAgaWYoR2FtZVN0YXRlLnVwZ3JhZGUuaGFzKCdCYXNpYyBBbmltYXRpb24nKSkge1xuICAgICAgICBhbmltYXRpb25IZWFkZXIgPSBbXG4gICAgICAgICAgYHZhciB0b3RhbFVuaXRzR2FpbmVkID0gMDtgLFxuICAgICAgICAgIGB1bml0cyArPSB0b3RhbFVuaXRzR2FpbmVkO1xuICAgIGFuaW1hdGVVbml0Q2hhbmdlKHRvdGFsVW5pdHNHYWluZWQpO2BdO1xuICAgICAgICB1bml0VGV4dCA9ICd0b3RhbFVuaXRzR2FpbmVkJztcbiAgICAgIH1cblxuICAgICAgdmFyIHNhdmVIZWFkZXIgPSBbJycsICcnXTtcbiAgICAgIGlmKEdhbWVTdGF0ZS51cGdyYWRlLmhhcygnU2F2ZScsIDEpKSB7XG4gICAgICAgIHNhdmVIZWFkZXIgPSBbYFxcbnZhciBjdXJyZW50VGljayA9IDA7YCwgYFxuICBpZigrK2N1cnJlbnRUaWNrICUgMTAgPT09IDApIHtcbiAgICBjdXJyZW50VGljayA9IDA7XG4gICAgc2F2ZSgpO1xuICB9YF07XG4gICAgICB9XG5cbiAgICAgIGlmKEdhbWVTdGF0ZS51cGdyYWRlLmhhcygnU2F2ZScsIDMpKSB7XG4gICAgICAgIHNhdmVIZWFkZXIgPSBbJycsIGBcbiAgc2F2ZSgpO2BdO1xuICAgICAgfVxuXG4gICAgICAvLyBkdW1wIGl0IG9uIHRoZSBwYWdlLiBpdCdzIGFuIFwiZXhwbG9pdFwiXG4gICAgICAkd2luZG93LmluY3JlYXNlVW5pdHMgPSBmdW5jdGlvbigpIHsgR2FtZVN0YXRlLnVuaXQuaW5jKEdhaW5DYWxjdWxhdG9yLmFsbCgpKTsgfTtcblxuICAgICAgcmV0dXJuIGAke3RpbWVvdXR9JHtzYXZlSGVhZGVyWzBdfVxuJHtmdW5jdGlvbkhlYWRlclswXX1cbiAgJHthbmltYXRpb25IZWFkZXJbMF19XG4gICR7aXRlcmF0aW9uSGVhZGVyWzBdfVxuICAgICR7dW5pdFRleHR9ICs9ICR7R2FpbkNhbGN1bGF0b3IuYm9vc3QoKX07XG4gICR7aXRlcmF0aW9uSGVhZGVyWzFdfVxuICAke3NhdmVIZWFkZXJbMV19XG4gICR7YW5pbWF0aW9uSGVhZGVyWzFdfVxuJHtmdW5jdGlvbkhlYWRlclsxXX1cbmA7XG4gICAgfVxuICB9O1xufTtcblxuZnVuY3Rpb25CdWlsZGVyLiRpbmplY3QgPSBbJ0dhbWVTdGF0ZScsICdHYWluQ2FsY3VsYXRvcicsICckd2luZG93J107XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb25CdWlsZGVyOyIsInZhciBnYWluQ2FsY3VsYXRvciA9IGZ1bmN0aW9uKEdhbWVTdGF0ZSkge1xuXG4gIHZhciBib29zdCA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBNYXRoLnBvdygoR2FtZVN0YXRlLnVwZ3JhZGUuZ2V0S2V5KCdCYXNpYyBCb29zdCcpIHx8IDApKzEsIDIpO1xuICB9O1xuXG4gIHZhciBpdGVyYXRpb24gPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgaXRlckxldmVsID0gR2FtZVN0YXRlLnVwZ3JhZGUuZ2V0S2V5KCdCYXNpYyBJdGVyYXRpb24nKTtcbiAgICBpZighaXRlckxldmVsKSB7IHJldHVybiAxOyB9XG4gICAgcmV0dXJuIE1hdGgucG93KDIsIGl0ZXJMZXZlbCsxKTtcbiAgfTtcblxuICB2YXIgdGltZXIgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgYmFzaWNSZWR1Y3Rpb24gPSAwLjA1ICogR2FtZVN0YXRlLnVwZ3JhZGUuZ2V0S2V5KCdCYXNpYyBUaW1lcicpO1xuICAgIHZhciBhZHZhbmNlZFJlZHVjdGlvbiA9IDAuMTUgKiBHYW1lU3RhdGUudXBncmFkZS5nZXRLZXkoJ0FkdmFuY2VkIFRpbWVyJyk7XG4gICAgYWR2YW5jZWRSZWR1Y3Rpb24gPSBfLmlzTmFOKGFkdmFuY2VkUmVkdWN0aW9uKSA/IDAgOiBhZHZhbmNlZFJlZHVjdGlvbjtcbiAgICByZXR1cm4gMzAwMDAgLSAoMzAwMDAgKiAoYmFzaWNSZWR1Y3Rpb24gKyBhZHZhbmNlZFJlZHVjdGlvbikpO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgYm9vc3Q6IGJvb3N0LFxuICAgIGl0ZXJhdGlvbjogaXRlcmF0aW9uLFxuICAgIHRpbWVyOiB0aW1lcixcbiAgICBhbGw6IGZ1bmN0aW9uKCkgeyByZXR1cm4gYm9vc3QoKSAqIGl0ZXJhdGlvbigpOyB9XG4gIH07XG59O1xuXG5nYWluQ2FsY3VsYXRvci4kaW5qZWN0ID0gWydHYW1lU3RhdGUnXTtcblxubW9kdWxlLmV4cG9ydHMgPSBnYWluQ2FsY3VsYXRvcjsiLCJ2YXIgZ2FtZUNvbnRyb2xsZXIgPSBmdW5jdGlvbigkc2NvcGUsICR3aW5kb3csICRpbnRlcnZhbCwgJGZpbHRlciwgJG1vZGFsLCBHYW1lU3RhdGUsIEdhbWVUaW1lciwgRnVuY3Rpb25CdWlsZGVyLCBVUEdSQURFUywgZmF2aWNvLCBOZ1RhYmxlUGFyYW1zKSB7XG4gICRzY29wZS5fdmlzaWJsZVVwZ3JhZGVzID0gW107XG5cbiAgJHNjb3BlLnRhYmxlUGFyYW1zID0gbmV3IE5nVGFibGVQYXJhbXMoe1xuICAgIHBhZ2U6IDEsXG4gICAgY291bnQ6IDEwMDBcbiAgfSwge1xuICAgIGdyb3VwQnk6ICdjYXRlZ29yeScsXG4gICAgdG90YWw6ICRzY29wZS5fdmlzaWJsZVVwZ3JhZGVzLmxlbmd0aCxcbiAgICBnZXREYXRhOiBmdW5jdGlvbigkZGVmZXIsIHBhcmFtcykge1xuICAgICAgdmFyIGRhdGEgPSAkc2NvcGUuX3Zpc2libGVVcGdyYWRlcztcblxuICAgICAgdmFyIG9yZGVyZWREYXRhID0gcGFyYW1zLnNvcnRpbmcoKSA/XG4gICAgICAgICRmaWx0ZXIoJ29yZGVyQnknKShkYXRhLCBwYXJhbXMub3JkZXJCeSgpKSA6XG4gICAgICAgIGRhdGE7XG5cbiAgICAgIHZhciBmaWx0ZXJlZERhdGEgPSBwYXJhbXMuZmlsdGVyKCkgP1xuICAgICAgICAkZmlsdGVyKCdmaWx0ZXInKShvcmRlcmVkRGF0YSwgcGFyYW1zLmZpbHRlcigpKSA6XG4gICAgICAgIG9yZGVyZWREYXRhO1xuXG4gICAgICBwYXJhbXMudG90YWwoJHNjb3BlLl92aXNpYmxlVXBncmFkZXMubGVuZ3RoKTtcblxuICAgICAgJGRlZmVyLnJlc29sdmUoZmlsdGVyZWREYXRhLnNsaWNlKChwYXJhbXMucGFnZSgpIC0gMSkgKiBwYXJhbXMuY291bnQoKSwgcGFyYW1zLnBhZ2UoKSAqIHBhcmFtcy5jb3VudCgpKSk7XG4gICAgfVxuICB9KTtcblxuICAkc2NvcGUuaGFzVXBncmFkZSA9IGZ1bmN0aW9uKGtleSwgbGV2ZWwgPSAwKSB7XG4gICAgcmV0dXJuIEdhbWVTdGF0ZS51cGdyYWRlLmhhcyhrZXksIGxldmVsKTtcbiAgfTtcblxuICAkc2NvcGUuaGFzVW5pdHMgPSBmdW5jdGlvbihhbXQpIHtcbiAgICByZXR1cm4gR2FtZVN0YXRlLnVuaXQuaGFzKGFtdCk7XG4gIH07XG5cbiAgJHNjb3BlLnZpc2libGVVcGdyYWRlcyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgdmFyIGN1cnJlbnQgPSAkc2NvcGUuX3VuaXRzO1xuICAgIHZhciBhbGxSZXQgPSBbXTtcblxuICAgIF8uZWFjaChVUEdSQURFUywgKGl0ZW0sIGl0ZW1OYW1lKSA9PiB7XG5cbiAgICAgIHZhciByZXQgPSBbXTtcblxuICAgICAgdmFyIG1lZXRzQWxsUmVxcyA9IHRydWU7XG5cbiAgICAgIF8uZWFjaChpdGVtLnJlcXVpcmVtZW50cywgKHJlcSwga2V5KSA9PiB7XG4gICAgICAgIGlmKCEkc2NvcGUuaGFzVXBncmFkZShrZXksIHJlcSkpIHsgbWVldHNBbGxSZXFzID0gZmFsc2U7IH1cbiAgICAgIH0pO1xuXG4gICAgICBpZighbWVldHNBbGxSZXFzKSB7IHJldHVybjsgfVxuXG4gICAgICBfLmVhY2goaXRlbS5jb3N0cywgKGNvc3QsIGkpID0+IHtcbiAgICAgICAgdmFyIHZpc0xldmVsID0gR2FtZVN0YXRlLnVwZ3JhZGUuZ2V0S2V5KCdVcGdyYWRlIFZpc2liaWxpdHknKTtcbiAgICAgICAgdmFyIHZpc2liaWxpdHlCb29zdCA9IDEgKyAoXy5pc1VuZGVmaW5lZCh2aXNMZXZlbCkgPyAwIDogMC4xNSp2aXNMZXZlbCk7XG4gICAgICAgIHZhciBwcmV2SXRlbSA9IHJldFtyZXQubGVuZ3RoLTFdO1xuICAgICAgICB2YXIgdG90YWxDb3N0ID0gY29zdCArIChwcmV2SXRlbSA/IHByZXZJdGVtLmNvc3QgOiAwKTtcblxuICAgICAgICBpZigkc2NvcGUuaGFzVXBncmFkZShpdGVtTmFtZSwgaSkgfHwgdG90YWxDb3N0L3Zpc2liaWxpdHlCb29zdCA+IGN1cnJlbnQpIHsgcmV0dXJuOyB9XG5cbiAgICAgICAgcmV0LnB1c2goe1xuICAgICAgICAgIG5hbWU6IGl0ZW1OYW1lLFxuICAgICAgICAgIGxldmVsOiBpLFxuICAgICAgICAgIGNvc3Q6IHRvdGFsQ29zdCxcbiAgICAgICAgICBidXlMZXZlbHM6IDEgKyAocHJldkl0ZW0gPyBwcmV2SXRlbS5idXlMZXZlbHMgOiAwKSxcbiAgICAgICAgICBjYXRlZ29yeTogaXRlbS5jYXRlZ29yeVxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuXG4gICAgICBhbGxSZXQucHVzaCguLi5yZXQpO1xuXG4gICAgfSk7XG5cbiAgICBpZigkc2NvcGUuaGFzVXBncmFkZSgnQWxwaGFiZXRpemVkIFVwZ3JhZGVzJykpIHtcbiAgICAgIGFsbFJldCA9IF8uc29ydEJ5T3JkZXIoYWxsUmV0LCBbJ25hbWUnLCAnbGV2ZWwnXSwgW3RydWUsIHRydWVdKTtcbiAgICB9XG5cbiAgICBpZigkc2NvcGUuaGFzVXBncmFkZSgnQmVzdCBGYXZpY29uJykpIHtcbiAgICAgIHZhciBidXlhYmxlVXBncmFkZXMgPSBfLmZpbHRlcihhbGxSZXQsIGl0ZW0gPT4gaXRlbS5jb3N0IDwgJHNjb3BlLl91bml0cykubGVuZ3RoO1xuICAgICAgaWYoYnV5YWJsZVVwZ3JhZGVzID4gMCkge1xuICAgICAgICBmYXZpY28uYmFkZ2UoYnV5YWJsZVVwZ3JhZGVzKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZhdmljby5yZXNldCgpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBhbGxSZXQ7XG4gIH07XG5cbiAgJHNjb3BlLmJ1eVVwZ3JhZGUgPSBmdW5jdGlvbih1cGdOYW1lLCBsZXZlbHMgPSAxKSB7XG4gICAgZG8ge1xuICAgICAgR2FtZVN0YXRlLnVwZ3JhZGUuaW5jKHVwZ05hbWUpO1xuICAgIH0gd2hpbGUoLS1sZXZlbHMgPiAwKTtcbiAgfTtcblxuICAkc2NvcGUuZ2FpblVuaXRzID0gZnVuY3Rpb24oKSB7XG4gICAgJHdpbmRvdy5pbmNyZWFzZVVuaXRzKCk7XG4gIH07XG5cbiAgJHNjb3BlLnNhdmUgPSBmdW5jdGlvbigpIHtcbiAgICBHYW1lU3RhdGUuc2F2ZSgpO1xuICB9O1xuXG4gICRzY29wZS5yZWZyZXNoID0gZnVuY3Rpb24oKSB7XG4gICAgJHNjb3BlLl91bml0cyA9IEdhbWVTdGF0ZS51bml0LmdldCgpO1xuICAgICRzY29wZS5fdmlzaWJsZVVwZ3JhZGVzID0gJHNjb3BlLnZpc2libGVVcGdyYWRlcygpO1xuICAgICRzY29wZS5fZnVuY3Rpb24gPSBGdW5jdGlvbkJ1aWxkZXIuYnVpbGQoKTtcbiAgICAkc2NvcGUudGFibGVQYXJhbXMucmVsb2FkKCk7XG4gIH07XG5cbiAgJHNjb3BlLm9wZW5Nb2RhbCA9IGZ1bmN0aW9uKG1vZGFsKSB7XG4gICAgJG1vZGFsLm9wZW4oe1xuICAgICAgdGVtcGxhdGVVcmw6IGBtb2RhbC0ke21vZGFsfWAsXG4gICAgICBzY29wZTogJHNjb3BlXG4gICAgfSk7XG4gIH07XG5cbiAgJHNjb3BlLnJlZnJlc2goKTtcbiAgJHNjb3BlLl90aW1lciA9IDA7XG4gICRzY29wZS5fdGltZXJtYXggPSAwO1xuICB2YXIgdGltZXJJbnRlcnZhbDtcblxuICBHYW1lU3RhdGUudW5pdC53YXRjaCgpLnRoZW4obnVsbCwgbnVsbCwgJHNjb3BlLnJlZnJlc2gpO1xuICBHYW1lU3RhdGUudXBncmFkZS53YXRjaCgpLnRoZW4obnVsbCwgbnVsbCwgJHNjb3BlLnJlZnJlc2gpO1xuXG4gIEdhbWVUaW1lci53YXRjaCgpLnRoZW4obnVsbCwgbnVsbCwgZnVuY3Rpb24obmV3VGltZXJWYWx1ZSkge1xuICAgICRzY29wZS5fdGltZXIgPSAkc2NvcGUuX3RpbWVyTWF4ID0gbmV3VGltZXJWYWx1ZTtcbiAgICBpZih0aW1lckludGVydmFsKSB7XG4gICAgICAkaW50ZXJ2YWwuY2FuY2VsKHRpbWVySW50ZXJ2YWwpO1xuICAgIH1cbiAgICB0aW1lckludGVydmFsID0gJGludGVydmFsKGZ1bmN0aW9uKCkge1xuICAgICAgJHNjb3BlLl90aW1lciAtPSAxMDA7XG4gICAgfSwgMTAwKTtcbiAgfSk7XG5cbiAgJHNjb3BlLnNhdmVPYmplY3QgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gR2FtZVN0YXRlLmJ1aWxkU2F2ZU9iamVjdCgpO1xuICB9O1xuXG4gICRzY29wZS5kZWJ1Z0luZm8gPSAkd2luZG93LmR1bXBEZWJ1Z0luZm8gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoJHNjb3BlLnNhdmVPYmplY3QoKSwgbnVsbCwgNCk7XG4gIH07XG5cbn07XG5cbmdhbWVDb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZScsICckd2luZG93JywgJyRpbnRlcnZhbCcsICckZmlsdGVyJywgJyRtb2RhbCcsICdHYW1lU3RhdGUnLCAnR2FtZVRpbWVyJywgJ0Z1bmN0aW9uQnVpbGRlcicsICdVcGdyYWRlcycsICdmYXZpY28nLCAnbmdUYWJsZVBhcmFtcyddO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdhbWVDb250cm9sbGVyOyIsInZhciBnYW1lU3RhdGUgPSBmdW5jdGlvbigkcSwgVVBHUkFERVMsIGxvY2FsU3RvcmFnZSwgQW5pbWF0ZWRGbHlUaXApIHtcbiAgdmFyIHVwZ3JhZGVzID0ge307XG4gIHZhciB1bml0cyA9IDA7XG4gIHZhciBzdGFydCA9IERhdGUubm93KCk7XG5cbiAgdmFyIHVwZ3JhZGVEZWZlciA9ICRxLmRlZmVyKCk7XG4gIHZhciB1bml0RGVmZXIgPSAkcS5kZWZlcigpO1xuXG4gIHZhciBidWlsZFNhdmVPYmplY3QgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdW5pdHM6IHVuaXRzLFxuICAgICAgdXBncmFkZXM6IHVwZ3JhZGVzLFxuICAgICAgc3RhcnQ6IHN0YXJ0XG4gICAgfTtcbiAgfTtcblxuICB2YXIgc2F2ZSA9IGZ1bmN0aW9uKCkge1xuICAgIGxvY2FsU3RvcmFnZS5zZXQoJ2dhbWUnLCBidWlsZFNhdmVPYmplY3QoKSk7XG4gIH07XG5cbiAgdmFyIGxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RhdGUgPSBsb2NhbFN0b3JhZ2UuZ2V0KCdnYW1lJyk7XG5cbiAgICBpZighc3RhdGUpIHsgcmV0dXJuOyB9XG5cbiAgICBpZihzdGF0ZS51bml0cykge1xuICAgICAgdW5pdHMgPSBzdGF0ZS51bml0cztcbiAgICB9XG5cbiAgICBpZihzdGF0ZS51cGdyYWRlcykge1xuICAgICAgdXBncmFkZXMgPSBzdGF0ZS51cGdyYWRlcztcbiAgICB9XG5cbiAgICBpZihzdGF0ZS5zdGFydCkge1xuICAgICAgc3RhcnQgPSBzdGF0ZS5zdGFydDtcbiAgICB9XG4gIH07XG5cbiAgdmFyIHVwZ3JhZGUgPSB7XG4gICAgaGFzOiBmdW5jdGlvbihrZXksIGxldmVsID0gMCkgeyByZXR1cm4gdXBncmFkZXNba2V5XSA+IGxldmVsOyB9LFxuICAgIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB1cGdyYWRlczsgfSxcbiAgICBnZXRLZXk6IGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdXBncmFkZXNba2V5XTsgfSxcbiAgICBpbmM6IGZ1bmN0aW9uKGtleSkge1xuXG4gICAgICB2YXIgbmV4dExldmVsID0gdXBncmFkZXNba2V5XSB8fCAwO1xuICAgICAgdmFyIGNvc3QgPSBVUEdSQURFU1trZXldLmNvc3RzW25leHRMZXZlbF07XG4gICAgICBpZih1bml0cyA8IGNvc3QpIHsgcmV0dXJuOyB9XG5cbiAgICAgIGlmKCF1cGdyYWRlc1trZXldKSB7IHVwZ3JhZGVzW2tleV0gPSAwOyB9XG4gICAgICB1cGdyYWRlc1trZXldKys7XG4gICAgICB1bml0LmluYygtY29zdCk7XG4gICAgICB1cGdyYWRlRGVmZXIubm90aWZ5KHtrZXk6IGtleSwgbGV2ZWw6IHVwZ3JhZGVzW2tleV0sIGFsbDogdXBncmFkZXN9KTtcbiAgICB9LFxuICAgIHdhdGNoOiBmdW5jdGlvbigpIHsgcmV0dXJuIHVwZ3JhZGVEZWZlci5wcm9taXNlOyB9XG4gIH07XG5cbiAgdmFyIHRpY2sgPSAwO1xuXG4gIHZhciB1bml0ID0ge1xuICAgIGhhczogZnVuY3Rpb24oYW10KSB7IHJldHVybiB1bml0cyA+IGFtdDsgfSxcbiAgICBpbmM6IGZ1bmN0aW9uKGFtdCkge1xuICAgICAgdW5pdHMgKz0gYW10O1xuICAgICAgdW5pdERlZmVyLm5vdGlmeSh1bml0cyk7XG5cbiAgICAgIGlmKHVwZ3JhZGUuaGFzKCdCYXNpYyBBbmltYXRpb24nKSkge1xuICAgICAgICBBbmltYXRlZEZseVRpcC5mbHkoYW10LCB1cGdyYWRlLmhhcygnTnVtYmVyIEZvcm1hdHRpbmcnKSk7XG4gICAgICB9XG5cbiAgICAgIGlmKHVwZ3JhZGUuaGFzKCdTYXZlJywgMSkgJiYgIXVwZ3JhZGUuaGFzKCdTYXZlJywgMykpIHtcbiAgICAgICAgaWYoKyt0aWNrICUgMTAgPT09IDApIHtcbiAgICAgICAgICB0aWNrID0gMDtcbiAgICAgICAgICBzYXZlKCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYodXBncmFkZS5oYXMoJ1NhdmUnLCAzKSkge1xuICAgICAgICBzYXZlKCk7XG4gICAgICB9XG5cbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiB1bml0czsgfSxcbiAgICB3YXRjaDogZnVuY3Rpb24oKSB7IHJldHVybiB1bml0RGVmZXIucHJvbWlzZTsgfVxuICB9O1xuXG4gIGxvYWQoKTtcblxuICByZXR1cm4ge1xuICAgIHVwZ3JhZGU6IHVwZ3JhZGUsXG4gICAgdW5pdDogdW5pdCxcbiAgICBzYXZlOiBzYXZlLFxuICAgIGJ1aWxkU2F2ZU9iamVjdDogYnVpbGRTYXZlT2JqZWN0XG4gIH07XG59O1xuXG5nYW1lU3RhdGUuJGluamVjdCA9IFsnJHEnLCAnVXBncmFkZXMnLCAnbG9jYWxTdG9yYWdlU2VydmljZScsICdBbmltYXRlZEZseVRpcCddO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdhbWVTdGF0ZTsiLCJ2YXIgZ2FtZVRpbWVyID0gZnVuY3Rpb24oJHEsICRpbnRlcnZhbCwgJHRpbWVvdXQsICR3aW5kb3csIEdhbWVTdGF0ZSwgR2FpbkNhbGN1bGF0b3IpIHtcblxuICB2YXIgaW50ZXJ2YWwgPSBudWxsO1xuICB2YXIgdGltZXJEZWZlciA9ICRxLmRlZmVyKCk7XG5cbiAgdmFyIHN0YXJ0VGltZXIgPSBmdW5jdGlvbih1cGdyYWRlRGF0YSA9IHtrZXk6ICdUaW1lcid9KSB7XG5cbiAgICBpZighR2FtZVN0YXRlLnVwZ3JhZGUuaGFzKCdCYXNpYyBUaW1lcicpKSB7IHJldHVybjsgfVxuICAgIGlmKCFfLmNvbnRhaW5zKHVwZ3JhZGVEYXRhLmtleSwgJ1RpbWVyJykpIHsgcmV0dXJuOyB9XG5cbiAgICBpZihpbnRlcnZhbCkge1xuICAgICAgJGludGVydmFsLmNhbmNlbChpbnRlcnZhbCk7XG4gICAgfVxuXG4gICAgaW50ZXJ2YWwgPSAkaW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gICAgICAkd2luZG93LmluY3JlYXNlVW5pdHMoKTtcbiAgICAgIHRpbWVyRGVmZXIubm90aWZ5KEdhaW5DYWxjdWxhdG9yLnRpbWVyKCkpO1xuICAgIH0sIEdhaW5DYWxjdWxhdG9yLnRpbWVyKCkpO1xuXG4gICAgdGltZXJEZWZlci5ub3RpZnkoR2FpbkNhbGN1bGF0b3IudGltZXIoKSk7XG4gIH07XG5cbiAgaWYoR2FtZVN0YXRlLnVwZ3JhZGUuaGFzKCdCYXNpYyBUaW1lcicpKSB7XG4gICAgJHRpbWVvdXQoc3RhcnRUaW1lciwgMCk7XG4gIH1cblxuICBHYW1lU3RhdGUudXBncmFkZS53YXRjaCgpLnRoZW4obnVsbCwgbnVsbCwgc3RhcnRUaW1lcik7XG5cbiAgcmV0dXJuIHtcbiAgICB3YXRjaDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGltZXJEZWZlci5wcm9taXNlO1xuICAgIH1cbiAgfTtcblxufTtcblxuZ2FtZVRpbWVyLiRpbmplY3QgPSBbJyRxJywgJyRpbnRlcnZhbCcsICckdGltZW91dCcsICckd2luZG93JywgJ0dhbWVTdGF0ZScsICdHYWluQ2FsY3VsYXRvciddO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdhbWVUaW1lcjsiLCJcbm1vZHVsZS5leHBvcnRzID0ge1xuICBTY29yZWJvYXJkOiB7XG4gICAgY2F0ZWdvcnk6ICdWaXN1YWwnLFxuICAgIGNvc3RzOiBbMTBdXG4gIH0sXG4gICdCYXNpYyBMYXlvdXQnOiB7XG4gICAgY2F0ZWdvcnk6ICdWaXN1YWwnLFxuICAgIGNvc3RzOiBbMTUsIDIwMF1cbiAgfSxcbiAgJ0JldHRlciBMYXlvdXQnOiB7XG4gICAgY2F0ZWdvcnk6ICdWaXN1YWwnLFxuICAgIHJlcXVpcmVtZW50czogeydCYXNpYyBMYXlvdXQnOiAxfSxcbiAgICBjb3N0czogWzIwMCwgMjAwMF1cbiAgfSxcbiAgRnVuY3Rpb246IHtcbiAgICBjYXRlZ29yeTogJ1RlY2gnLFxuICAgIGNvc3RzOiBbMjBdXG4gIH0sXG4gICdCYXNpYyBJdGVyYXRpb24nOiB7XG4gICAgY2F0ZWdvcnk6ICdUZWNoJyxcbiAgICByZXF1aXJlbWVudHM6IHtGdW5jdGlvbjogMH0sXG4gICAgY29zdHM6IFs1MCwgMzAwLCAyMDAwMCwgMTUwMDAwXVxuICB9LFxuICAnQmFzaWMgVGltZXInOiB7XG4gICAgY2F0ZWdvcnk6ICdUZWNoJyxcbiAgICByZXF1aXJlbWVudHM6IHtGdW5jdGlvbjogMH0sXG4gICAgY29zdHM6IFs1MCwgNjAwLCAyMDAwMCwgMTAwMDAwXVxuICB9LFxuICAnQmFzaWMgQm9vc3QnOiB7XG4gICAgY2F0ZWdvcnk6ICdUZWNoJyxcbiAgICByZXF1aXJlbWVudHM6IHtGdW5jdGlvbjogMH0sXG4gICAgY29zdHM6IFsxMCwgMTAwLCAyNTAwMCwgMjAwMDAwXVxuICB9LFxuICBDYXBpdGFsaXphdGlvbjoge1xuICAgIGNhdGVnb3J5OiAnVmlzdWFsJyxcbiAgICBjb3N0czogWzEwMF1cbiAgfSxcbiAgUHJlZm9ybWF0dGluZzoge1xuICAgIGNhdGVnb3J5OiAnVmlzdWFsJyxcbiAgICByZXF1aXJlbWVudHM6IHsnQmFzaWMgSXRlcmF0aW9uJzogMH0sXG4gICAgY29zdHM6IFsxNTBdXG4gIH0sXG4gICdWaXN1YWwgQ291bnRkb3duJzoge1xuICAgIGNhdGVnb3J5OiAnVmlzdWFsJyxcbiAgICByZXF1aXJlbWVudHM6IHsnQmFzaWMgVGltZXInOiAwfSxcbiAgICBjb3N0czogWzEwMDBdXG4gIH0sXG4gICdQYWdlIFRpdGxlJzoge1xuICAgIGNhdGVnb3J5OiAnQ29zbWV0aWMnLFxuICAgIHJlcXVpcmVtZW50czogeydCYXNpYyBMYXlvdXQnOiAwfSxcbiAgICBjb3N0czogWzUwMF1cbiAgfSxcbiAgJ0JldHRlciBQYWdlIFRpdGxlJzoge1xuICAgIGNhdGVnb3J5OiAnQ29zbWV0aWMnLFxuICAgIHJlcXVpcmVtZW50czogeydQYWdlIFRpdGxlJzogMCwgJ1Njb3JlYm9hcmQnOiAwfSxcbiAgICBjb3N0czogWzI1MDBdXG4gIH0sXG4gICdBbHBoYWJldGl6ZWQgVXBncmFkZXMnOiB7XG4gICAgY2F0ZWdvcnk6ICdDb3NtZXRpYycsXG4gICAgcmVxdWlyZW1lbnRzOiB7J0NhcGl0YWxpemF0aW9uJzogMCwgJ0JldHRlciBMYXlvdXQnOiAwfSxcbiAgICBjb3N0czogWzUwMDBdXG4gIH0sXG4gICdVcGdyYWRlIFZpc2liaWxpdHknOiB7XG4gICAgY2F0ZWdvcnk6ICdDb3NtZXRpYycsXG4gICAgcmVxdWlyZW1lbnRzOiB7J0FscGhhYmV0aXplZCBVcGdyYWRlcyc6IDB9LFxuICAgIGNvc3RzOiBbNjUwMCwgODUwMCwgMTA1MDBdXG4gIH0sXG4gICdQcm9ncmVzcyBCYXInOiB7XG4gICAgY2F0ZWdvcnk6ICdWaXN1YWwnLFxuICAgIHJlcXVpcmVtZW50czogeydCZXR0ZXIgTGF5b3V0JzogMSwgJ0Jhc2ljIENvbG9yJzogMCwgJ1Zpc3VhbCBDb3VudGRvd24nOiAwfSxcbiAgICBjb3N0czogWzUwMDBdXG4gIH0sXG4gICdCYXNpYyBTdHlsZSc6IHtcbiAgICBjYXRlZ29yeTogJ1Zpc3VhbCcsXG4gICAgcmVxdWlyZW1lbnRzOiB7J0JldHRlciBMYXlvdXQnOiAxfSxcbiAgICBjb3N0czogWzEwMDAwLCAyMDAwMF1cbiAgfSxcbiAgJ0Jhc2ljIENvbG9yJzoge1xuICAgIGNhdGVnb3J5OiAnVmlzdWFsJyxcbiAgICByZXF1aXJlbWVudHM6IHsnQmFzaWMgU3R5bGUnOiAwfSxcbiAgICBjb3N0czogWzEyNTAwXVxuICB9LFxuICBJY29ub2dyYXBoeToge1xuICAgIGNhdGVnb3J5OiAnVmlzdWFsJyxcbiAgICByZXF1aXJlbWVudHM6IHsnQmFzaWMgU3R5bGUnOiAwfSxcbiAgICBjb3N0czogWzI1MDAwXVxuICB9LFxuICAnTnVtYmVyIEZvcm1hdHRpbmcnOiB7XG4gICAgY2F0ZWdvcnk6ICdDb3NtZXRpYycsXG4gICAgcmVxdWlyZW1lbnRzOiB7J0Jhc2ljIFN0eWxlJzogMH0sXG4gICAgY29zdHM6IFsyMDAwMF1cbiAgfSxcbiAgJ0Jhc2ljIEFuaW1hdGlvbic6IHtcbiAgICBjYXRlZ29yeTogJ0Nvc21ldGljJyxcbiAgICByZXF1aXJlbWVudHM6IHsnQmFzaWMgU3R5bGUnOiAwLCAnQmFzaWMgSXRlcmF0aW9uJzogMCwgJ0Jhc2ljIENvbG9yJzogMH0sXG4gICAgY29zdHM6IFsxMDAwMDBdXG4gIH0sXG4gICdGYXZpY29uJzoge1xuICAgIGNhdGVnb3J5OiAnQ29zbWV0aWMnLFxuICAgIGNvc3RzOiBbMjAwMF1cbiAgfSxcbiAgJ0Jlc3QgRmF2aWNvbic6IHtcbiAgICBjYXRlZ29yeTogJ0Nvc21ldGljJyxcbiAgICByZXF1aXJlbWVudHM6IHsnQmV0dGVyIFBhZ2UgVGl0bGUnOiAwLCAnRmF2aWNvbic6IDB9LFxuICAgIGNvc3RzOiBbMTAwMDAwXVxuICB9LFxuICAnU3ludGF4IEhpZ2hsaWdodGluZyc6IHtcbiAgICBjYXRlZ29yeTogJ0Nvc21ldGljJyxcbiAgICByZXF1aXJlbWVudHM6IHsnUHJlZm9ybWF0dGluZyc6IDB9LFxuICAgIGNvc3RzOiBbNTAwMDBdXG4gIH0sXG4gICdTYXZlJzoge1xuICAgIGNhdGVnb3J5OiAnVGVjaCcsXG4gICAgcmVxdWlyZW1lbnRzOiB7J0Jhc2ljIExheW91dCc6IDB9LFxuICAgIGNvc3RzOiBbMzAwLCA1MDAwLCAyMDAwMCwgMTUwMDAwXVxuICB9LFxuICAnQWR2YW5jZWQgVGltZXInOiB7XG4gICAgY2F0ZWdvcnk6ICdUZWNoJyxcbiAgICByZXF1aXJlbWVudHM6IHsnQmFzaWMgVGltZXInOiAzfSxcbiAgICBjb3N0czogWzIwMDAwMCwgNzUwMDAwLCAxNTAwMDAwXVxuICB9LFxuICAnQmVzdCBUYWJsZSc6IHtcbiAgICBjYXRlZ29yeTogJ1RlY2gnLFxuICAgIHJlcXVpcmVtZW50czogeydCYXNpYyBTdHlsZSc6IDF9LFxuICAgIGNvc3RzOiBbMjUwMDAwXVxuICB9LFxuICBNZW51OiB7XG4gICAgY2F0ZWdvcnk6ICdUZWNoJyxcbiAgICByZXF1aXJlbWVudHM6IHsnQmFzaWMgTGF5b3V0JzogMH0sXG4gICAgY29zdHM6IFsyNTAwXVxuICB9LFxuICAnSGVscCBNZW51Jzoge1xuICAgIGNhdGVnb3J5OiAnVGVjaCcsXG4gICAgcmVxdWlyZW1lbnRzOiB7J01lbnUnOiAwfSxcbiAgICBjb3N0czogWzJdXG4gIH0sXG4gIFRvb2x0aXBzOiB7XG4gICAgY2F0ZWdvcnk6ICdUZWNoJyxcbiAgICByZXF1aXJlbWVudHM6IHsnSGVscCBNZW51JzogMH0sXG4gICAgY29zdHM6IFsxNzUwMF1cbiAgfSxcbiAgJ09wdGlvbnMgTWVudSc6IHtcbiAgICBjYXRlZ29yeTogJ1RlY2gnLFxuICAgIHJlcXVpcmVtZW50czogeydNZW51JzogMH0sXG4gICAgY29zdHM6IFs1MDAwXVxuICB9XG59OyJdfQ==
