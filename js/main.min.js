(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"./src/js/main.js":[function(require,module,exports){
'use strict';

var upgrades = require('./upgrades');
var gameState = require('./gamestate');
var gameTimer = require('./gametimer');
var gainCalculator = require('./gaincalculator');
var functionBuilder = require('./functionbuilder');
var animatedFlyTip = require('./animatedflytip');
var favico = require('./favico');
var gameController = require('./gamecontroller');
var upgradeManager = require('./upgrademanager');

angular.module('c', ['ui.bootstrap', 'hljs', 'LocalStorageModule', 'ngTable', 'angularMoment']).constant('Upgrades', upgrades).constant('Version', '0.0.1').service('favico', favico).service('AnimatedFlyTip', animatedFlyTip).service('GameState', gameState).service('GameTimer', gameTimer).service('UpgradeManager', upgradeManager).service('GainCalculator', gainCalculator).service('FunctionBuilder', functionBuilder).controller('Game', gameController);

},{"./animatedflytip":"/home/seiyria/projects/c/src/js/animatedflytip.js","./favico":"/home/seiyria/projects/c/src/js/favico.js","./functionbuilder":"/home/seiyria/projects/c/src/js/functionbuilder.js","./gaincalculator":"/home/seiyria/projects/c/src/js/gaincalculator.js","./gamecontroller":"/home/seiyria/projects/c/src/js/gamecontroller.js","./gamestate":"/home/seiyria/projects/c/src/js/gamestate.js","./gametimer":"/home/seiyria/projects/c/src/js/gametimer.js","./upgrademanager":"/home/seiyria/projects/c/src/js/upgrademanager.js","./upgrades":"/home/seiyria/projects/c/src/js/upgrades.js"}],"/home/seiyria/projects/c/src/js/animatedflytip.js":[function(require,module,exports){
'use strict';

var animatedFlyTip = function animatedFlyTip($filter) {
  return {
    fly: function fly(num) {
      var useSeparator = arguments[1] === undefined ? false : arguments[1];

      var $element = $('<div />');

      var numString = num;
      if (useSeparator) {
        numString = $filter('number')(numString, 0);
      }

      if (num < 0) {
        $element.addClass('text-danger');
        $element.html(numString);
      } else if (num > 0) {
        $element.addClass('text-success');
        $element.html('+' + numString);
      }

      $element.css('position', 'absolute');
      $('body').append($element);

      var $base = $('#navbar-unit');
      $element.offset({ left: $base.offset().left, top: $base.offset().top });

      $element.animate({ top: '60px' });
      $element.animate({ opacity: 0, top: '60px' }, 500, 'swing', function () {
        $(this).remove();
      });
    }
  };
};

animatedFlyTip.$inject = ['$filter'];

module.exports = animatedFlyTip;

},{}],"/home/seiyria/projects/c/src/js/favico.js":[function(require,module,exports){
'use strict';

var favico = function favico() {
  var favico = new Favico({
    animation: 'fade'
  });

  var currentNum = 0;

  var badge = function badge(num) {
    if (num === currentNum) {
      return;
    }
    currentNum = num;
    favico.badge(num);
  };
  var reset = function reset() {
    favico.reset();
  };

  return {
    badge: badge,
    reset: reset
  };
};

module.exports = favico;

},{}],"/home/seiyria/projects/c/src/js/functionbuilder.js":[function(require,module,exports){
'use strict';

var functionBuilder = function functionBuilder(GameState, GainCalculator, $window) {
  return {
    build: function build() {

      var upgrade = GameState.upgrade;

      var unitText = '' + GameState.currencySet.get() + 's';

      var functionHeader = ['', ''];
      if (GameState.upgrade.has('Function')) {
        functionHeader = ['function increaseUnits() {', '}'];
      }

      var iterationHeader = ['', ''];
      if (GameState.upgrade.has('Basic Iteration')) {
        iterationHeader = ['for(var i = 0; i < ' + GainCalculator.iteration(upgrade) + '; i++) {', '}'];
      }

      var timeout = '';
      if (GameState.upgrade.has('Basic Timer')) {
        timeout = '$interval(increaseUnits, ' + GainCalculator.timer(upgrade) + ');\n';
      }

      var animationHeader = ['', ''];
      if (GameState.upgrade.has('Basic Animation')) {
        animationHeader = ['var totalUnitsGained = 0;', 'units += totalUnitsGained;\n  animateUnitChange(totalUnitsGained);'];
        unitText = 'totalUnitsGained';
      }

      var saveHeader = ['', ''];
      if (GameState.upgrade.has('Save', 1)) {
        saveHeader = ['\nvar currentTick = 0;', '\n  if(++currentTick % 10 === 0) {\n    currentTick = 0;\n    save();\n  }'];
      }

      if (GameState.upgrade.has('Save', 3)) {
        saveHeader = ['', '\n  save();'];
      }

      // dump it on the page. it's an "exploit"
      $window.increaseUnits = function () {
        GameState.unit.inc(GainCalculator.all(upgrade));
      };

      return '' + timeout + '' + saveHeader[0] + '\n' + functionHeader[0] + '\n  ' + animationHeader[0] + '\n  ' + iterationHeader[0] + '\n    ' + unitText + ' += ' + GainCalculator.boost(upgrade) + ';\n  ' + iterationHeader[1] + '\n  ' + saveHeader[1] + '\n  ' + animationHeader[1] + '\n' + functionHeader[1] + '\n';
    }
  };
};

functionBuilder.$inject = ['GameState', 'GainCalculator', '$window'];

module.exports = functionBuilder;

},{}],"/home/seiyria/projects/c/src/js/gaincalculator.js":[function(require,module,exports){
'use strict';

var gainCalculator = function gainCalculator() {

  var boost = function boost(upgrade) {
    return Math.pow((upgrade.getKey('Basic Boost') || 0) + 1, 2);
  };

  var iteration = function iteration(upgrade) {
    var iterLevel = upgrade.getKey('Basic Iteration');
    if (!iterLevel) {
      return 1;
    }
    return Math.pow(2, iterLevel + 1);
  };

  var timer = function timer(upgrade) {
    var basicReduction = 0.05 * upgrade.getKey('Basic Timer');
    var advancedReduction = 0.15 * upgrade.getKey('Advanced Timer');
    advancedReduction = _.isNaN(advancedReduction) ? 0 : advancedReduction;
    return 30000 - Math.round(30000 * (basicReduction + advancedReduction));
  };

  return {
    boost: boost,
    iteration: iteration,
    timer: timer,
    all: function all(upgrade) {
      return boost(upgrade) * iteration(upgrade);
    }
  };
};

module.exports = gainCalculator;

},{}],"/home/seiyria/projects/c/src/js/gamecontroller.js":[function(require,module,exports){
'use strict';

var gameController = function gameController($scope, $window, $interval, $filter, $modal, GameState, GameTimer, UpgradeManager, FunctionBuilder, NgTableParams) {
  $scope._visibleUpgrades = [];

  $scope.currencyName = GameState.currencySet.get();
  $scope.changeCurrency = function () {
    bootbox.prompt({ title: 'What would you like to call the currency?', value: $scope.currencyName, callback: function callback(result) {
        if (!result || !result.trim()) {
          return;
        }
        GameState.currencySet.set(result);
        $scope.currencyName = GameState.currencySet.get();
        $scope.$digest();
      } });
  };

  $scope.tableParams = new NgTableParams({
    page: 1,
    count: 1000
  }, {
    groupBy: 'category',
    total: $scope._visibleUpgrades.length,
    getData: function getData($defer, params) {
      var data = $scope._visibleUpgrades;

      var orderedData = params.sorting() ? $filter('orderBy')(data, params.orderBy()) : data;

      var filteredData = params.filter() ? $filter('filter')(orderedData, params.filter()) : orderedData;

      params.total($scope._visibleUpgrades.length);

      $defer.resolve(filteredData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
    }
  });

  $scope.hasUpgrade = function (key) {
    var level = arguments[1] === undefined ? 0 : arguments[1];

    return GameState.upgrade.has(key, level);
  };

  $scope.hasUnits = function (amt) {
    return GameState.unit.has(amt);
  };

  $scope.buyUpgrade = function (upgName) {
    var levels = arguments[1] === undefined ? 1 : arguments[1];

    do {
      GameState.upgrade.inc(upgName);
    } while (--levels > 0);
  };

  $scope.gainUnits = function () {
    $window.increaseUnits();
  };

  $scope.save = function () {
    GameState.save();
  };

  $scope.refresh = function () {
    $scope._units = GameState.unit.get();
    $scope._visibleUpgrades = UpgradeManager.visible();
    $scope._function = FunctionBuilder.build();
    $scope.tableParams.reload();
  };

  $scope.openModal = function (modal) {
    $modal.open({
      templateUrl: 'modal-' + modal,
      scope: $scope
    });
  };

  $scope.refresh();
  $scope._timer = 0;
  $scope._timermax = 0;
  var timerInterval;

  GameState.unit.watch().then(null, null, $scope.refresh);
  GameState.upgrade.watch().then(null, null, $scope.refresh);

  GameTimer.watch().then(null, null, function (newTimerValue) {
    $scope._timer = $scope._timerMax = newTimerValue;
    if (timerInterval) {
      $interval.cancel(timerInterval);
    }
    timerInterval = $interval(function () {
      $scope._timer -= 100;
    }, 100);
  });

  $scope.saveObject = function () {
    return GameState.buildSaveObject();
  };

  $scope.debugInfo = $window.dumpDebugInfo = function () {
    return JSON.stringify($scope.saveObject(), null, 4);
  };

  $scope.resetGame = function () {
    var callback = arguments[0] === undefined ? function () {} : arguments[0];

    var finalCallback = function finalCallback() {
      GameState.hardReset();
      $scope.refresh();
      callback();
    };

    if ($scope.hasUpgrade('Confirmation Dialogs')) {
      bootbox.confirm('Are you sure you want to hard reset? Nothing will be saved.', function (result) {
        if (!result) {
          return;
        }
        finalCallback();
      });
    } else {
      finalCallback();
    }
  };
};

gameController.$inject = ['$scope', '$window', '$interval', '$filter', '$modal', 'GameState', 'GameTimer', 'UpgradeManager', 'FunctionBuilder', 'ngTableParams'];

module.exports = gameController;

},{}],"/home/seiyria/projects/c/src/js/gamestate.js":[function(require,module,exports){
'use strict';

var gameState = function gameState($q, UPGRADES, GainCalculator, localStorage, AnimatedFlyTip) {
  var upgrades = {};
  var units = 0;
  var start = Date.now();
  var lastSave = Date.now();
  var currencyName = 'Unit';

  var upgradeDefer = $q.defer();
  var unitDefer = $q.defer();

  var buildSaveObject = function buildSaveObject() {
    return {
      units: units,
      upgrades: upgrades,
      start: start,
      lastSave: lastSave,
      currencyName: currencyName
    };
  };

  var save = function save() {
    lastSave = Date.now();
    localStorage.set('game', buildSaveObject());
  };

  var hardReset = function hardReset() {
    start = Date.now();
    units = 0;
    upgrades = {};
    save();
  };

  var load = function load() {
    var state = localStorage.get('game');

    if (!state) {
      return;
    }

    if (state.units) {
      units = state.units;
    }

    if (state.upgrades) {
      upgrades = state.upgrades;
    }

    if (state.start) {
      start = state.start;
    }

    if (state.currencyName) {
      currencyName = state.currencyName;
    }

    if (state.lastSave) {
      lastSave = state.lastSave;

      if (upgrade.has('Offline Progress')) {
        var diff = Date.now() - state.lastSave;
        var multiplier = 0.25 + 0.25 * upgrade.getKey('Offline Progress');
        var timersElapsed = Math.floor(diff / GainCalculator.timer(upgrade));
        var gain = timersElapsed * multiplier * GainCalculator.all(upgrade);
        unit.inc(gain);
        save();
      }
    }
  };

  var currencySet = {
    set: function set(newName) {
      currencyName = newName;save();
    },
    get: function get() {
      return currencyName;
    }
  };

  var upgrade = {
    has: function has(key) {
      var level = arguments[1] === undefined ? 0 : arguments[1];
      return upgrades[key] > level;
    },
    get: function get() {
      return upgrades;
    },
    getKey: function getKey(key) {
      return upgrades[key];
    },
    inc: function inc(key) {

      var nextLevel = upgrades[key] || 0;

      var cost = _.isFunction(UPGRADES[key].levels) ? UPGRADES[key].levels(nextLevel).cost : UPGRADES[key].levels[nextLevel].cost;
      if (units < cost) {
        return;
      }

      if (!upgrades[key]) {
        upgrades[key] = 0;
      }
      upgrades[key]++;
      unit.inc(-cost);
      upgradeDefer.notify({ key: key, level: upgrades[key], all: upgrades });
    },
    watch: function watch() {
      return upgradeDefer.promise;
    }
  };

  var tick = 0;

  var unit = {
    has: function has(amt) {
      return units > amt;
    },
    inc: function inc(amt) {
      units += amt;
      unitDefer.notify(units);

      if (upgrade.has('Basic Animation')) {
        AnimatedFlyTip.fly(amt, upgrade.has('Number Formatting'));
      }

      if (upgrade.has('Save', 1) && !upgrade.has('Save', 3)) {
        if (++tick % 10 === 0) {
          tick = 0;
          save();
        }
      }

      if (upgrade.has('Save', 3)) {
        save();
      }
    },
    get: function get() {
      return units;
    },
    watch: function watch() {
      return unitDefer.promise;
    }
  };

  load();

  return {
    upgrade: upgrade,
    unit: unit,
    currencySet: currencySet,
    save: save,
    buildSaveObject: buildSaveObject,
    hardReset: hardReset
  };
};

gameState.$inject = ['$q', 'Upgrades', 'GainCalculator', 'localStorageService', 'AnimatedFlyTip'];

module.exports = gameState;

},{}],"/home/seiyria/projects/c/src/js/gametimer.js":[function(require,module,exports){
'use strict';

var gameTimer = function gameTimer($q, $interval, $timeout, $window, GameState, GainCalculator) {

  var interval = null;
  var timerDefer = $q.defer();

  var startTimer = function startTimer() {
    var upgradeData = arguments[0] === undefined ? { key: 'Timer' } : arguments[0];

    if (!GameState.upgrade.has('Basic Timer')) {
      return;
    }
    if (!_.contains(upgradeData.key, 'Timer')) {
      return;
    }

    if (interval) {
      $interval.cancel(interval);
    }

    interval = $interval(function () {
      $window.increaseUnits();
      timerDefer.notify(GainCalculator.timer(GameState.upgrade));
    }, GainCalculator.timer(GameState.upgrade));

    timerDefer.notify(GainCalculator.timer(GameState.upgrade));
  };

  if (GameState.upgrade.has('Basic Timer')) {
    $timeout(startTimer, 0);
  }

  GameState.upgrade.watch().then(null, null, startTimer);

  return {
    watch: function watch() {
      return timerDefer.promise;
    }
  };
};

gameTimer.$inject = ['$q', '$interval', '$timeout', '$window', 'GameState', 'GainCalculator'];

module.exports = gameTimer;

},{}],"/home/seiyria/projects/c/src/js/upgrademanager.js":[function(require,module,exports){
'use strict';

var upgradeManager = function upgradeManager(GameState, UPGRADES, favico) {

  var hasUpgrade = function hasUpgrade(key) {
    var level = arguments[1] === undefined ? 0 : arguments[1];

    return GameState.upgrade.has(key, level);
  };

  return {
    visible: function visible() {

      var current = GameState.unit.get();
      var allRet = [];

      _.each(UPGRADES, function (item, itemName) {

        var ret = [];

        var meetsAllReqs = true;

        _.each(item.requirements, function (req, key) {
          if (!hasUpgrade(key, req)) {
            meetsAllReqs = false;
          }
        });

        if (!meetsAllReqs) {
          return;
        }

        var levels = item.levels;
        if (_.isFunction(item.levels)) {
          var nextLevel = GameState.upgrade.getKey(itemName) || 0;
          levels = {};
          levels[nextLevel] = item.levels(nextLevel);
        }

        _.each(levels, function (level, i) {
          var visLevel = GameState.upgrade.getKey('Upgrade Visibility');
          var visibilityBoost = 1 + (_.isUndefined(visLevel) ? 0 : 0.15 * visLevel);
          var prevItem = ret[ret.length - 1];
          var totalCost = level.cost + (prevItem ? prevItem.cost : 0);

          if (hasUpgrade(itemName, i) || totalCost / visibilityBoost > current) {
            return;
          }

          ret.push({
            name: itemName,
            level: i,
            cost: totalCost,
            description: level.description,
            buyLevels: 1 + (prevItem ? prevItem.buyLevels : 0),
            category: item.category
          });
        });

        allRet.push.apply(allRet, ret);
      });

      if (hasUpgrade('Alphabetized Upgrades')) {
        allRet = _.sortByOrder(allRet, ['name', 'level'], [true, true]);
      }

      if (hasUpgrade('Best Favicon')) {
        var buyableUpgrades = _.filter(allRet, function (item) {
          return item.cost < current;
        }).length;
        if (buyableUpgrades > 0) {
          favico.badge(buyableUpgrades);
        } else {
          favico.reset();
        }
      }

      return allRet;
    }
  };
};

upgradeManager.$inject = ['GameState', 'Upgrades', 'favico'];

module.exports = upgradeManager;

},{}],"/home/seiyria/projects/c/src/js/upgrades.js":[function(require,module,exports){
'use strict';

module.exports = {
  Scoreboard: {
    category: 'Visual',
    levels: [{ cost: 10, description: 'Visualize your score!' }]
  },
  'Basic Layout': {
    category: 'Visual',
    levels: [{ cost: 15, description: 'A slightly better layout.' }, { cost: 200, description: 'Another slightly better layout.' }]
  },
  'Better Layout': {
    category: 'Visual',
    requirements: { 'Basic Layout': 1 },
    levels: [{ cost: 200, description: 'One of the better layouts you get to see.' }, { cost: 2000, description: 'Probably the best layout in the game.' }]
  },
  Function: {
    category: 'Tech',
    levels: [{ cost: 20, description: 'Access to a function is necessary to gain more power.' }]
  },
  'Basic Iteration': {
    category: 'Tech',
    requirements: { Function: 0 },
    levels: [{ cost: 50, description: 'More iterations means faster production.' }, { cost: 300, description: 'Even more iterations means even faster production.' }, { cost: 20000, description: 'Yet more iterations means yet faster production.' }, { cost: 150000, description: 'Many iterations means much faster production.' }]
  },
  'Basic Timer': {
    category: 'Tech',
    requirements: { Function: 0 },
    levels: [{ cost: 50, description: 'A timer runs and automatically produces for you every so often.' }, { cost: 600, description: 'The timing of the timer is slightly faster.' }, { cost: 20000, description: 'The timer runs even faster now.' }, { cost: 100000, description: 'The timer goes zoom zoom!' }]
  },
  'Basic Boost': {
    category: 'Tech',
    requirements: { Function: 0 },
    levels: [{ cost: 10, description: 'Bigger boost means more production happening at once.' }, { cost: 1000, description: 'Even bigger boost means even more production.' }, { cost: 25000, description: 'Yet a bigger boost means a higher production yield.' }, { cost: 200000, description: 'The biggest boost means the best production.' }]
  },
  Capitalization: {
    category: 'Visual',
    levels: [{ cost: 100, description: 'Sometimes good punctuation just looks nice.' }]
  },
  Preformatting: {
    category: 'Visual',
    requirements: { 'Basic Iteration': 0 },
    levels: [{ cost: 1500, description: 'Better code formatting for readability' }]
  },
  'Visual Countdown': {
    category: 'Visual',
    requirements: { 'Basic Timer': 0 },
    levels: [{ cost: 1000, description: 'It might help to see the countdown for the timer run.' }]
  },
  'Page Title': {
    category: 'Cosmetic',
    requirements: { 'Basic Layout': 0 },
    levels: [{ cost: 500, description: 'A nicer looking page title. So revealing!' }]
  },
  'Better Page Title': {
    category: 'Cosmetic',
    requirements: { 'Page Title': 0, Scoreboard: 0 },
    levels: [{ cost: 2500, description: 'Just when you thought the page title looked good, it gets better!' }]
  },
  'Alphabetized Upgrades': {
    category: 'Cosmetic',
    requirements: { Capitalization: 0, 'Better Layout': 0 },
    levels: [{ cost: 5000, description: 'Putting the upgrades in some kind of order makes them much easier to navigate.' }]
  },
  'Upgrade Visibility': {
    category: 'Cosmetic',
    requirements: { 'Alphabetized Upgrades': 0 },
    levels: [{ cost: 6500, description: 'Upgrades will appear slightly before you can buy them.' }, { cost: 8500, description: 'Upgrades will appear a while before you can buy them.' }, { cost: 10500, description: 'Upgrades will show up quite a ways before you can buy them.' }]
  },
  'Progress Bar': {
    category: 'Visual',
    requirements: { 'Better Layout': 1, 'Basic Color': 0, 'Visual Countdown': 0 },
    levels: [{ cost: 5000, description: 'Transform your countdown into a progress bar instead!' }]
  },
  'Basic Style': {
    category: 'Visual',
    requirements: { 'Better Layout': 1 },
    levels: [{ cost: 10000, description: 'Yes, it does get better! This upgrade makes the table look nicer.' }, { cost: 20000, description: 'This upgrade fixes some slight alignment issues introduced by the previous upgrade.' }]
  },
  'Basic Color': {
    category: 'Visual',
    requirements: { 'Basic Style': 0 },
    levels: [{ cost: 12500, description: 'Add some color to the page.' }]
  },
  Iconography: {
    category: 'Visual',
    requirements: { 'Basic Style': 0 },
    levels: [{ cost: 25000, description: 'Get some icons on the page.' }]
  },
  'Number Formatting': {
    category: 'Cosmetic',
    requirements: { 'Basic Style': 0 },
    levels: [{ cost: 20000, description: 'Format the numbers more nicely!' }]
  },
  'Basic Animation': {
    category: 'Cosmetic',
    requirements: { 'Basic Style': 0, 'Basic Iteration': 0, 'Basic Color': 0, 'Better Layout': 1 },
    levels: [{ cost: 100000, description: 'Sprinkle some animations onto the page.' }]
  },
  Favicon: {
    category: 'Cosmetic',
    requirements: { 'Better Layout': 1 },
    levels: [{ cost: 2000, description: 'Add the favicon to the header bar.' }]
  },
  'Best Favicon': {
    category: 'Cosmetic',
    requirements: { 'Better Page Title': 0, Favicon: 0 },
    levels: [{ cost: 100000, description: 'Get notified via favicon whenever you have a new upgrade to purchase.' }]
  },
  'Syntax Highlighting': {
    category: 'Cosmetic',
    requirements: { Preformatting: 0 },
    levels: [{ cost: 50000, description: 'Make every code portion look even better!' }]
  },
  Save: {
    category: 'Tech',
    requirements: { 'Basic Layout': 0 },
    levels: [{ cost: 300, description: 'Introduce a save button that allows you to save your progress.' }, { cost: 5000, description: 'Introduce a mechanic that saves occasionally.' }, { cost: 20000, description: 'Introduce a debug menu where you can see your save data.' }, { cost: 150000, description: 'Make the game save automatically after production or purchases.' }]
  },
  'Advanced Timer': {
    category: 'Tech',
    requirements: { 'Basic Timer': 3 },
    levels: [{ cost: 200000, description: 'The timer is back and faster than ever.' }, { cost: 750000, description: 'Just when you thought the timer was out of tricks, it gets faster!' }, { cost: 1500000, description: 'The fastest timer yet!' }]
  },
  'Best Table': {
    category: 'Tech',
    requirements: { 'Basic Style': 1, 'Alphabetized Upgrades': 0 },
    levels: [{ cost: 250000, description: 'This gives you the best upgrade table possible!' }]
  },
  Menu: {
    category: 'Tech',
    requirements: { 'Basic Layout': 0 },
    levels: [{ cost: 2500, description: 'Buy a dropdown menu. Things end up here.' }]
  },
  'Help Menu': {
    category: 'Tech',
    requirements: { Menu: 0 },
    levels: [{ cost: 2, description: 'The cheapest upgrade in the game. I bet you have no idea what it does.' }]
  },
  Tooltips: {
    category: 'Tech',
    requirements: { 'Help Menu': 0 },
    levels: [{ cost: 17500, description: 'Well, this sure is self-referential.' }]
  },
  'Options Menu': {
    category: 'Tech',
    requirements: { Menu: 0 },
    levels: [{ cost: 5000, description: 'All of the stange options go here. Also, you can reset your game.' }]
  },
  'Offline Progress': {
    category: 'Tech',
    requirements: { 'Basic Timer': 0 },
    levels: [{ cost: 10000, description: 'You will gain progress slowly, even while the game is not open.' }, { cost: 100000, description: 'You will gain progress slightly faster, even while the game is not open.' }, { cost: 1000000, description: 'You will gain progress normally, even while the game is not open.' }]
  },
  'Confirmation Dialogs': {
    category: 'Tech',
    requirements: { 'Help Menu': 0 },
    levels: [{ cost: 100000, description: 'You get notified of potentially dangerous actions. Beware!' }]
  },
  'Currency Name Change': {
    category: 'Cosmetic',
    requirements: { 'Options Menu': 0 },
    levels: [{ cost: 650000, description: 'If you dislike the name units, you can change it!' }]
  }
};

},{}]},{},["./src/js/main.js"])
//# sourceMappingURL=data:application/json;base64,
